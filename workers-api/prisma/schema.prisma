// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String?
  username  String
  password  String
  role      String   @default("USER")
  avatarUrl String?
  phone     String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  baziData BaziData[]
  orders   Order[]
  master   Master?
  Chat     Chat[]

  @@map("users")
}

model BaziData {
  id         String   @id @default(cuid())
  userId     String
  inputData  String // JSON字符串，D1不支持Json类型
  resultData String // JSON字符串，D1不支持Json类型
  analysis   String? // AI分析结果
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("bazi_data")
}

model Order {
  id          String   @id @default(cuid())
  userId      String
  type        String // CONSULTATION, ANALYSIS, MEMBERSHIP
  amount      Decimal
  status      String   @default("PENDING") // PENDING, COMPLETED, CANCELLED
  description String?
  metadata    String? // JSON字符串
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Master {
  id          String   @id @default(cuid())
  userId      String   @unique
  title       String
  description String?
  price       Decimal
  rating      Decimal?
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())

  user User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  Chat Chat[]

  @@map("masters")
}

model Chat {
  id          String   @id @default(cuid())
  userId      String
  masterId    String
  messages    String // JSON字符串
  status      String   @default("active")
  lastMessage String?
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  master Master @relation(fields: [masterId], references: [id], onDelete: Cascade)

  @@map("chats")
}
