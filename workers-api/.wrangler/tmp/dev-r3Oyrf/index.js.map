{
  "version": 3,
  "sources": ["../bundle-OiAAjT/checked-fetch.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/.prisma/client/edge.js", "../../../node_modules/@prisma/client/edge.js", "../../../node_modules/@prisma/debug/dist/index.js", "../bundle-OiAAjT/middleware-loader.entry.ts", "../bundle-OiAAjT/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/matcher.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/prepared-router.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/hono/dist/middleware/logger/index.js", "../../../node_modules/hono/dist/utils/color.js", "../../../src/routes/auth.ts", "../../../src/lib/auth.ts", "../../../src/lib/db.ts", "../../../node_modules/@prisma/adapter-d1/dist/index.mjs", "../../../node_modules/@prisma/driver-adapter-utils/dist/index.mjs", "../../../src/routes/bazi.ts", "../../../src/lib/bazi.ts", "../../../src/routes/ai.ts", "../../../src/lib/ai.ts", "../../../src/routes/orders.ts", "../../../src/routes/masters.ts", "../../../src/routes/chats.ts", "../../../src/routes/payments.ts", "../../../src/routes/users.ts", "../../../src/routes/websocket.ts", "../../../src/middleware/cache.ts", "../../../src/middleware/rateLimit.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/.wrangler/tmp/dev-r3Oyrf",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/scripts/default-index.ts\nvar default_index_exports = {};\n__export(default_index_exports, {\n  Prisma: () => Prisma,\n  PrismaClient: () => PrismaClient,\n  default: () => default_index_default\n});\nmodule.exports = __toCommonJS(default_index_exports);\n\n// ../../node_modules/.pnpm/@prisma+engines-version@5.22.0-44.605197351a3c8bdd595af2d2a9bc3025bca48ea2/node_modules/@prisma/engines-version/package.json\nvar prisma = {\n  enginesVersion: \"605197351a3c8bdd595af2d2a9bc3025bca48ea2\"\n};\n\n// package.json\nvar version = \"5.22.0\";\n\n// src/runtime/utils/clientVersion.ts\nvar clientVersion = version;\n\n// src/scripts/default-index.ts\nvar PrismaClient = class {\n  constructor() {\n    throw new Error('@prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.');\n  }\n};\nfunction defineExtension(ext) {\n  if (typeof ext === \"function\") {\n    return ext;\n  }\n  return (client) => client.$extends(ext);\n}\nfunction getExtensionContext(that) {\n  return that;\n}\nvar Prisma = {\n  defineExtension,\n  getExtensionContext,\n  prismaVersion: { client: clientVersion, engine: prisma.enginesVersion }\n};\nvar default_index_default = { Prisma };\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Prisma,\n  PrismaClient\n});\n", "module.exports = {\n  // https://github.com/prisma/prisma/pull/12907\n  ...require('.prisma/client/edge'),\n}\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Debug: () => Debug,\n  clearLogs: () => clearLogs,\n  default: () => src_default,\n  getLogs: () => getLogs\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// ../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs\nvar colors_exports = {};\n__export(colors_exports, {\n  $: () => $,\n  bgBlack: () => bgBlack,\n  bgBlue: () => bgBlue,\n  bgCyan: () => bgCyan,\n  bgGreen: () => bgGreen,\n  bgMagenta: () => bgMagenta,\n  bgRed: () => bgRed,\n  bgWhite: () => bgWhite,\n  bgYellow: () => bgYellow,\n  black: () => black,\n  blue: () => blue,\n  bold: () => bold,\n  cyan: () => cyan,\n  dim: () => dim,\n  gray: () => gray,\n  green: () => green,\n  grey: () => grey,\n  hidden: () => hidden,\n  inverse: () => inverse,\n  italic: () => italic,\n  magenta: () => magenta,\n  red: () => red,\n  reset: () => reset,\n  strikethrough: () => strikethrough,\n  underline: () => underline,\n  white: () => white,\n  yellow: () => yellow\n});\nvar FORCE_COLOR;\nvar NODE_DISABLE_COLORS;\nvar NO_COLOR;\nvar TERM;\nvar isTTY = true;\nif (typeof process !== \"undefined\") {\n  ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n  isTTY = process.stdout && process.stdout.isTTY;\n}\nvar $ = {\n  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== \"dumb\" && (FORCE_COLOR != null && FORCE_COLOR !== \"0\" || isTTY)\n};\nfunction init(x, y) {\n  let rgx = new RegExp(`\\\\x1b\\\\[${y}m`, \"g\");\n  let open = `\\x1B[${x}m`, close = `\\x1B[${y}m`;\n  return function(txt) {\n    if (!$.enabled || txt == null) return txt;\n    return open + (!!~(\"\" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n  };\n}\nvar reset = init(0, 0);\nvar bold = init(1, 22);\nvar dim = init(2, 22);\nvar italic = init(3, 23);\nvar underline = init(4, 24);\nvar inverse = init(7, 27);\nvar hidden = init(8, 28);\nvar strikethrough = init(9, 29);\nvar black = init(30, 39);\nvar red = init(31, 39);\nvar green = init(32, 39);\nvar yellow = init(33, 39);\nvar blue = init(34, 39);\nvar magenta = init(35, 39);\nvar cyan = init(36, 39);\nvar white = init(37, 39);\nvar gray = init(90, 39);\nvar grey = init(90, 39);\nvar bgBlack = init(40, 49);\nvar bgRed = init(41, 49);\nvar bgGreen = init(42, 49);\nvar bgYellow = init(43, 49);\nvar bgBlue = init(44, 49);\nvar bgMagenta = init(45, 49);\nvar bgCyan = init(46, 49);\nvar bgWhite = init(47, 49);\n\n// src/index.ts\nvar MAX_ARGS_HISTORY = 100;\nvar COLORS = [\"green\", \"yellow\", \"blue\", \"magenta\", \"cyan\", \"red\"];\nvar argsHistory = [];\nvar lastTimestamp = Date.now();\nvar lastColor = 0;\nvar processEnv = typeof process !== \"undefined\" ? process.env : {};\nglobalThis.DEBUG ??= processEnv.DEBUG ?? \"\";\nglobalThis.DEBUG_COLORS ??= processEnv.DEBUG_COLORS ? processEnv.DEBUG_COLORS === \"true\" : true;\nvar topProps = {\n  enable(namespace) {\n    if (typeof namespace === \"string\") {\n      globalThis.DEBUG = namespace;\n    }\n  },\n  disable() {\n    const prev = globalThis.DEBUG;\n    globalThis.DEBUG = \"\";\n    return prev;\n  },\n  // this is the core logic to check if logging should happen or not\n  enabled(namespace) {\n    const listenedNamespaces = globalThis.DEBUG.split(\",\").map((s) => {\n      return s.replace(/[.+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    });\n    const isListened = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === \"\" || listenedNamespace[0] === \"-\") return false;\n      return namespace.match(RegExp(listenedNamespace.split(\"*\").join(\".*\") + \"$\"));\n    });\n    const isExcluded = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === \"\" || listenedNamespace[0] !== \"-\") return false;\n      return namespace.match(RegExp(listenedNamespace.slice(1).split(\"*\").join(\".*\") + \"$\"));\n    });\n    return isListened && !isExcluded;\n  },\n  log: (...args) => {\n    const [namespace, format, ...rest] = args;\n    const logWithFormatting = console.warn ?? console.log;\n    logWithFormatting(`${namespace} ${format}`, ...rest);\n  },\n  formatters: {}\n  // not implemented\n};\nfunction debugCreate(namespace) {\n  const instanceProps = {\n    color: COLORS[lastColor++ % COLORS.length],\n    enabled: topProps.enabled(namespace),\n    namespace,\n    log: topProps.log,\n    extend: () => {\n    }\n    // not implemented\n  };\n  const debugCall = (...args) => {\n    const { enabled, namespace: namespace2, color, log } = instanceProps;\n    if (args.length !== 0) {\n      argsHistory.push([namespace2, ...args]);\n    }\n    if (argsHistory.length > MAX_ARGS_HISTORY) {\n      argsHistory.shift();\n    }\n    if (topProps.enabled(namespace2) || enabled) {\n      const stringArgs = args.map((arg) => {\n        if (typeof arg === \"string\") {\n          return arg;\n        }\n        return safeStringify(arg);\n      });\n      const ms = `+${Date.now() - lastTimestamp}ms`;\n      lastTimestamp = Date.now();\n      if (globalThis.DEBUG_COLORS) {\n        log(colors_exports[color](bold(namespace2)), ...stringArgs, colors_exports[color](ms));\n      } else {\n        log(namespace2, ...stringArgs, ms);\n      }\n    }\n  };\n  return new Proxy(debugCall, {\n    get: (_, prop) => instanceProps[prop],\n    set: (_, prop, value) => instanceProps[prop] = value\n  });\n}\nvar Debug = new Proxy(debugCreate, {\n  get: (_, prop) => topProps[prop],\n  set: (_, prop, value) => topProps[prop] = value\n});\nfunction safeStringify(value, indent = 2) {\n  const cache = /* @__PURE__ */ new Set();\n  return JSON.stringify(\n    value,\n    (key, value2) => {\n      if (typeof value2 === \"object\" && value2 !== null) {\n        if (cache.has(value2)) {\n          return `[Circular *]`;\n        }\n        cache.add(value2);\n      } else if (typeof value2 === \"bigint\") {\n        return value2.toString();\n      }\n      return value2;\n    },\n    indent\n  );\n}\nfunction getLogs(numChars = 7500) {\n  const logs = argsHistory.map(([namespace, ...args]) => {\n    return `${namespace} ${args.map((arg) => {\n      if (typeof arg === \"string\") {\n        return arg;\n      } else {\n        return JSON.stringify(arg);\n      }\n    }).join(\" \")}`;\n  }).join(\"\\n\");\n  if (logs.length < numChars) {\n    return logs;\n  }\n  return logs.slice(-numChars);\n}\nfunction clearLogs() {\n  argsHistory.length = 0;\n}\nvar src_default = Debug;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Debug,\n  clearLogs,\n  getLogs\n});\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/.wrangler/tmp/bundle-OiAAjT/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/.wrangler/tmp/bundle-OiAAjT/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/.wrangler/tmp/bundle-OiAAjT/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/gemini/project/ai_gen/bazi_fortune_app/workers-api/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Hono } from \"hono\";\nimport { cors } from \"hono/cors\";\nimport { logger } from \"hono/logger\";\nimport { getPrismaClient } from \"./lib/db\";\nimport { authRoutes } from \"./routes/auth\";\nimport { baziRoutes } from \"./routes/bazi\";\nimport { aiRoutes } from \"./routes/ai\";\nimport { orderRoutes } from \"./routes/orders\";\nimport { masterRoutes } from \"./routes/masters\";\nimport { chatRoutes } from \"./routes/chats\";\nimport { paymentsRoutes } from \"./routes/payments\";\nimport { usersRoutes } from \"./routes/users\";\nimport { websocketRoutes } from \"./routes/websocket\";\nimport { Env, Variables } from \"./lib/auth\";\nimport { cache, userCache, baziCache } from \"./middleware/cache\";\nimport {\n  rateLimit,\n  userRateLimit,\n  loginRateLimit,\n  registerRateLimit,\n  uploadRateLimit,\n} from \"./middleware/rateLimit\";\n\nconst app = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// \u4E2D\u95F4\u4EF6\napp.use(\"*\", logger());\napp.use(\n  \"*\",\n  cors({\n    origin: [\"http://localhost:3000\", \"https://your-app-domain.com\"],\n    allowMethods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"],\n    allowHeaders: [\"Content-Type\", \"Authorization\"],\n  }),\n);\n\n// \u5168\u5C40\u9650\u6D41\napp.use(\n  \"*\",\n  rateLimit({\n    windowMs: 15 * 60 * 1000, // 15\u5206\u949F\n    max: 1000, // \u6BCF\u4E2AIP\u6700\u591A1000\u6B21\u8BF7\u6C42\n  }),\n);\n\n// \u5168\u5C40\u7F13\u5B58\napp.use(\"/api/v1/masters\", cache({ ttl: 300 })); // \u7F13\u5B585\u5206\u949F\n\n// \u5065\u5EB7\u68C0\u67E5\napp.get(\"/health\", (c) => {\n  return c.json({ status: \"ok\", timestamp: new Date().toISOString() });\n});\n\n// API\u8DEF\u7531\napp.route(\"/api/v1/auth\", authRoutes);\napp.route(\"/api/v1/bazi\", baziRoutes);\napp.route(\"/api/v1/ai\", aiRoutes);\napp.route(\"/api/v1/orders\", orderRoutes);\napp.route(\"/api/v1/masters\", masterRoutes);\napp.route(\"/api/v1/chats\", chatRoutes);\napp.route(\"/api/v1/payments\", paymentsRoutes);\napp.route(\"/api/v1/users\", usersRoutes);\napp.route(\"/api/v1/ws\", websocketRoutes);\n\n// \u7279\u5B9A\u8DEF\u7531\u7684\u9650\u6D41\u548C\u7F13\u5B58\napp.post(\"/api/v1/auth/login\", loginRateLimit);\napp.post(\"/api/v1/auth/register\", registerRateLimit);\napp.post(\"/api/v1/users/avatar\", uploadRateLimit);\napp.get(\"/api/v1/bazi/history\", userCache(60)); // \u7528\u6237\u516B\u5B57\u5386\u53F2\u7F13\u5B581\u5206\u949F\n\n// 404\u5904\u7406\napp.notFound((c) => {\n  return c.json({ error: \"Not Found\" }, 404);\n});\n\n// \u9519\u8BEF\u5904\u7406\napp.onError((err, c) => {\n  console.error(err);\n  return c.json({ error: \"Internal Server Error\", message: err.message }, 500);\n});\n\nexport default {\n  fetch: app.fetch,\n};\n", "// src/index.ts\nimport { Hono } from \"./hono.js\";\nexport {\n  Hono\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/request.ts\nimport { HTTPException } from \"./http-exception.js\";\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value !== void 0) {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nvar cloneRawRequest = async (req) => {\n  if (!req.raw.bodyUsed) {\n    return req.raw.clone();\n  }\n  const cacheKey = Object.keys(req.bodyCache)[0];\n  if (!cacheKey) {\n    throw new HTTPException(500, {\n      message: \"Cannot clone request: body was already consumed and not cached. Please use HonoRequest methods (e.g., req.json(), req.text()) instead of consuming req.raw directly.\"\n    });\n  }\n  const requestInit = {\n    body: await req[cacheKey](),\n    cache: req.raw.cache,\n    credentials: req.raw.credentials,\n    headers: req.header(),\n    integrity: req.raw.integrity,\n    keepalive: req.raw.keepalive,\n    method: req.method,\n    mode: req.raw.mode,\n    redirect: req.raw.redirect,\n    referrer: req.raw.referrer,\n    referrerPolicy: req.raw.referrerPolicy,\n    signal: req.raw.signal\n  };\n  return new Request(req.url, requestInit);\n};\nexport {\n  HonoRequest,\n  cloneRawRequest\n};\n", "// src/http-exception.ts\nvar HTTPException = class extends Error {\n  res;\n  status;\n  constructor(status = 500, options) {\n    super(options?.message, { cause: options?.cause });\n    this.res = options?.res;\n    this.status = status;\n  }\n  getResponse() {\n    if (this.res) {\n      const newResponse = new Response(this.res.body, {\n        status: this.status,\n        headers: this.res.headers\n      });\n      return newResponse;\n    }\n    return new Response(this.message, {\n      status: this.status\n    });\n  }\n};\nexport {\n  HTTPException\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/router/reg-exp-router/index.ts\nimport { RegExpRouter } from \"./router.js\";\nimport { PreparedRegExpRouter, buildInitParams, serializeInitParams } from \"./prepared-router.js\";\nexport {\n  PreparedRegExpRouter,\n  RegExpRouter,\n  buildInitParams,\n  serializeInitParams\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { match, emptyParam } from \"./matcher.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match = match;\n  buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    clearWildcardRegExpCache();\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/reg-exp-router/matcher.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nvar emptyParam = [];\nfunction match(method, path) {\n  const matchers = this.buildAllMatchers();\n  const match2 = (method2, path2) => {\n    const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n    const staticMatch = matcher[2][path2];\n    if (staticMatch) {\n      return staticMatch;\n    }\n    const match3 = path2.match(matcher[0]);\n    if (!match3) {\n      return [[], emptyParam];\n    }\n    const index = match3.indexOf(\"\", 1);\n    return [matcher[1][index], match3];\n  };\n  this.match = match2;\n  return match2(method, path);\n}\nexport {\n  emptyParam,\n  match\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/prepared-router.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { match, emptyParam } from \"./matcher.js\";\nimport { RegExpRouter } from \"./router.js\";\nvar PreparedRegExpRouter = class {\n  name = \"PreparedRegExpRouter\";\n  #matchers;\n  #relocateMap;\n  constructor(matchers, relocateMap) {\n    this.#matchers = matchers;\n    this.#relocateMap = relocateMap;\n  }\n  #addWildcard(method, handlerData) {\n    const matcher = this.#matchers[method];\n    matcher[1].forEach((list) => list && list.push(handlerData));\n    Object.values(matcher[2]).forEach((list) => list[0].push(handlerData));\n  }\n  #addPath(method, path, handler, indexes, map) {\n    const matcher = this.#matchers[method];\n    if (!map) {\n      matcher[2][path][0].push([handler, {}]);\n    } else {\n      indexes.forEach((index) => {\n        if (typeof index === \"number\") {\n          matcher[1][index].push([handler, map]);\n        } else {\n          ;\n          matcher[2][index || path][0].push([handler, map]);\n        }\n      });\n    }\n  }\n  add(method, path, handler) {\n    if (!this.#matchers[method]) {\n      const all = this.#matchers[METHOD_NAME_ALL];\n      const staticMap = {};\n      for (const key in all[2]) {\n        staticMap[key] = [all[2][key][0].slice(), emptyParam];\n      }\n      this.#matchers[method] = [\n        all[0],\n        all[1].map((list) => Array.isArray(list) ? list.slice() : 0),\n        staticMap\n      ];\n    }\n    if (path === \"/*\" || path === \"*\") {\n      const handlerData = [handler, {}];\n      if (method === METHOD_NAME_ALL) {\n        for (const m in this.#matchers) {\n          this.#addWildcard(m, handlerData);\n        }\n      } else {\n        this.#addWildcard(method, handlerData);\n      }\n      return;\n    }\n    const data = this.#relocateMap[path];\n    if (!data) {\n      throw new Error(`Path ${path} is not registered`);\n    }\n    for (const [indexes, map] of data) {\n      if (method === METHOD_NAME_ALL) {\n        for (const m in this.#matchers) {\n          this.#addPath(m, path, handler, indexes, map);\n        }\n      } else {\n        this.#addPath(method, path, handler, indexes, map);\n      }\n    }\n  }\n  buildAllMatchers() {\n    return this.#matchers;\n  }\n  match = match;\n};\nvar buildInitParams = ({ paths }) => {\n  const RegExpRouterWithMatcherExport = class extends RegExpRouter {\n    buildAndExportAllMatchers() {\n      return this.buildAllMatchers();\n    }\n  };\n  const router = new RegExpRouterWithMatcherExport();\n  for (const path of paths) {\n    router.add(METHOD_NAME_ALL, path, path);\n  }\n  const matchers = router.buildAndExportAllMatchers();\n  const all = matchers[METHOD_NAME_ALL];\n  const relocateMap = {};\n  for (const path of paths) {\n    if (path === \"/*\" || path === \"*\") {\n      continue;\n    }\n    all[1].forEach((list, i) => {\n      list.forEach(([p, map]) => {\n        if (p === path) {\n          if (relocateMap[path]) {\n            relocateMap[path][0][1] = {\n              ...relocateMap[path][0][1],\n              ...map\n            };\n          } else {\n            relocateMap[path] = [[[], map]];\n          }\n          if (relocateMap[path][0][0].findIndex((j) => j === i) === -1) {\n            relocateMap[path][0][0].push(i);\n          }\n        }\n      });\n    });\n    for (const path2 in all[2]) {\n      all[2][path2][0].forEach(([p]) => {\n        if (p === path) {\n          relocateMap[path] ||= [[[]]];\n          const value = path2 === path ? \"\" : path2;\n          if (relocateMap[path][0][0].findIndex((v) => v === value) === -1) {\n            relocateMap[path][0][0].push(value);\n          }\n        }\n      });\n    }\n  }\n  for (let i = 0, len = all[1].length; i < len; i++) {\n    all[1][i] = all[1][i] ? [] : 0;\n  }\n  for (const path in all[2]) {\n    all[2][path][0] = [];\n  }\n  return [matchers, relocateMap];\n};\nvar serializeInitParams = ([matchers, relocateMap]) => {\n  const matchersStr = JSON.stringify(\n    matchers,\n    (_, value) => value instanceof RegExp ? `##${value.toString()}##` : value\n  ).replace(/\"##(.+?)##\"/g, (_, str) => str.replace(/\\\\\\\\/g, \"\\\\\"));\n  const relocateMapStr = JSON.stringify(relocateMap);\n  return `[${matchersStr},${relocateMapStr}]`;\n};\nexport {\n  PreparedRegExpRouter,\n  buildInitParams,\n  serializeInitParams\n};\n", "// src/router/smart-router/index.ts\nimport { SmartRouter } from \"./router.js\";\nexport {\n  SmartRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/index.ts\nimport { TrieRouter } from \"./router.js\";\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// src/middleware/logger/index.ts\nimport { getColorEnabledAsync } from \"../../utils/color.js\";\nvar humanize = (times) => {\n  const [delimiter, separator] = [\",\", \".\"];\n  const orderTimes = times.map((v) => v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1\" + delimiter));\n  return orderTimes.join(separator);\n};\nvar time = (start) => {\n  const delta = Date.now() - start;\n  return humanize([delta < 1e3 ? delta + \"ms\" : Math.round(delta / 1e3) + \"s\"]);\n};\nvar colorStatus = async (status) => {\n  const colorEnabled = await getColorEnabledAsync();\n  if (colorEnabled) {\n    switch (status / 100 | 0) {\n      case 5:\n        return `\\x1B[31m${status}\\x1B[0m`;\n      case 4:\n        return `\\x1B[33m${status}\\x1B[0m`;\n      case 3:\n        return `\\x1B[36m${status}\\x1B[0m`;\n      case 2:\n        return `\\x1B[32m${status}\\x1B[0m`;\n    }\n  }\n  return `${status}`;\n};\nasync function log(fn, prefix, method, path, status = 0, elapsed) {\n  const out = prefix === \"<--\" /* Incoming */ ? `${prefix} ${method} ${path}` : `${prefix} ${method} ${path} ${await colorStatus(status)} ${elapsed}`;\n  fn(out);\n}\nvar logger = (fn = console.log) => {\n  return async function logger2(c, next) {\n    const { method, url } = c.req;\n    const path = url.slice(url.indexOf(\"/\", 8));\n    await log(fn, \"<--\" /* Incoming */, method, path);\n    const start = Date.now();\n    await next();\n    await log(fn, \"-->\" /* Outgoing */, method, path, c.res.status, time(start));\n  };\n};\nexport {\n  logger\n};\n", "// src/utils/color.ts\nfunction getColorEnabled() {\n  const { process, Deno } = globalThis;\n  const isNoColor = typeof Deno?.noColor === \"boolean\" ? Deno.noColor : process !== void 0 ? \"NO_COLOR\" in process?.env : false;\n  return !isNoColor;\n}\nasync function getColorEnabledAsync() {\n  const { navigator } = globalThis;\n  const cfWorkers = \"cloudflare:workers\";\n  const isNoColor = navigator !== void 0 && navigator.userAgent === \"Cloudflare-Workers\" ? await (async () => {\n    try {\n      return \"NO_COLOR\" in ((await import(cfWorkers)).env ?? {});\n    } catch {\n      return false;\n    }\n  })() : !getColorEnabled();\n  return !isNoColor;\n}\nexport {\n  getColorEnabled,\n  getColorEnabledAsync\n};\n", "import { Hono } from \"hono\";\nimport { PrismaClient } from \"@prisma/client/edge\";\nimport { verifyJWT, generateJWT, JWTPayload } from \"../lib/auth\";\nimport { getPrismaClient } from \"../lib/db\";\nimport { Env } from \"../lib/auth\";\n\nexport const authRoutes = new Hono<{ Bindings: Env }>();\n\n// \u6CE8\u518C\nauthRoutes.post(\"/register\", async (c) => {\n  try {\n    const { email, username, password } = await c.req.json();\n\n    if (!email || !username || !password) {\n      return c.json({ error: \"Missing required fields\" }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u5B58\u5728\n    const existingUser = await prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (existingUser) {\n      return c.json({ error: \"User already exists\" }, 409);\n    }\n\n    // \u54C8\u5E0C\u5BC6\u7801\n    const hashedPassword = await hashPassword(password);\n\n    // \u521B\u5EFA\u7528\u6237\n    const user = await prisma.user.create({\n      data: {\n        email,\n        username,\n        password: hashedPassword,\n        role: \"USER\",\n      },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        role: true,\n        createdAt: true,\n      },\n    });\n\n    // \u751F\u6210JWT\n    const payload: JWTPayload = {\n      userId: user.id,\n      email: user.email,\n      role: user.role,\n    };\n\n    const token = await generateJWT(payload, c.env.JWT_SECRET);\n\n    return c.json({\n      user,\n      token,\n    });\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    return c.json({ error: \"Registration failed\" }, 500);\n  }\n});\n\n// \u767B\u5F55\nauthRoutes.post(\"/login\", async (c) => {\n  try {\n    const { email, password } = await c.req.json();\n\n    if (!email || !password) {\n      return c.json({ error: \"Missing email or password\" }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u67E5\u627E\u7528\u6237\n    const user = await prisma.user.findUnique({\n      where: { email },\n    });\n\n    if (!user) {\n      return c.json({ error: \"Invalid credentials\" }, 401);\n    }\n\n    // \u9A8C\u8BC1\u5BC6\u7801\n    const isValidPassword = await verifyPassword(password, user.password);\n\n    if (!isValidPassword) {\n      return c.json({ error: \"Invalid credentials\" }, 401);\n    }\n\n    // \u751F\u6210JWT\n    const payload: JWTPayload = {\n      userId: user.id,\n      email: user.email,\n      role: user.role,\n    };\n\n    const token = await generateJWT(payload, c.env.JWT_SECRET);\n\n    return c.json({\n      user: {\n        id: user.id,\n        email: user.email,\n        username: user.username,\n        role: user.role,\n        createdAt: user.createdAt,\n      },\n      token,\n    });\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return c.json({ error: \"Login failed\" }, 500);\n  }\n});\n\n// \u5237\u65B0\u4EE4\u724C\nauthRoutes.post(\"/refresh\", async (c) => {\n  try {\n    const authorization = c.req.header(\"Authorization\");\n    if (!authorization || !authorization.startsWith(\"Bearer \")) {\n      return c.json({ error: \"Missing or invalid token\" }, 401);\n    }\n\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u83B7\u53D6\u6700\u65B0\u7528\u6237\u4FE1\u606F\n    const user = await prisma.user.findUnique({\n      where: { id: payload.userId },\n    });\n\n    if (!user) {\n      return c.json({ error: \"User not found\" }, 404);\n    }\n\n    // \u751F\u6210\u65B0\u7684JWT\n    const newPayload: JWTPayload = {\n      userId: user.id,\n      email: user.email,\n      role: user.role,\n    };\n\n    const newToken = await generateJWT(newPayload, c.env.JWT_SECRET);\n\n    return c.json({\n      user: {\n        id: user.id,\n        email: user.email,\n        username: user.username,\n        role: user.role,\n        createdAt: user.createdAt,\n      },\n      token: newToken,\n    });\n  } catch (error) {\n    console.error(\"Token refresh error:\", error);\n    return c.json({ error: \"Token refresh failed\" }, 401);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u4FE1\u606F\nauthRoutes.get(\"/profile\", async (c) => {\n  try {\n    const authorization = c.req.header(\"Authorization\");\n    if (!authorization || !authorization.startsWith(\"Bearer \")) {\n      return c.json({ error: \"Missing or invalid token\" }, 401);\n    }\n\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n\n    const prisma = getPrismaClient(c.env);\n\n    const user = await prisma.user.findUnique({\n      where: { id: payload.userId },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        role: true,\n        createdAt: true,\n      },\n    });\n\n    if (!user) {\n      return c.json({ error: \"User not found\" }, 404);\n    }\n\n    return c.json({ user });\n  } catch (error) {\n    console.error(\"Get profile error:\", error);\n    return c.json({ error: \"Failed to get profile\" }, 500);\n  }\n});\n\n// \u5BC6\u7801\u54C8\u5E0C\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    encoder.encode(\"pepper\"), // \u5728\u5B9E\u9645\u5E94\u7528\u4E2D\u5E94\u4F7F\u7528\u73AF\u5883\u53D8\u91CF\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"],\n  );\n\n  const saltedPassword = new Uint8Array(salt.length + data.length);\n  saltedPassword.set(salt);\n  saltedPassword.set(data, salt.length);\n\n  const signature = await crypto.subtle.sign(\"HMAC\", key, saltedPassword);\n\n  // \u7EC4\u5408salt\u548C\u54C8\u5E0C\u503C\n  const combined = new Uint8Array(salt.length + signature.byteLength);\n  combined.set(salt);\n  combined.set(new Uint8Array(signature), salt.length);\n\n  return btoa(String.fromCharCode(...combined));\n}\n\n// \u5BC6\u7801\u9A8C\u8BC1\nasync function verifyPassword(\n  password: string,\n  hashedPassword: string,\n): Promise<boolean> {\n  try {\n    const encoder = new TextEncoder();\n    const combined = new Uint8Array(\n      Array.from(atob(hashedPassword)).map((char) => char.charCodeAt(0)),\n    );\n\n    const salt = combined.slice(0, 16);\n    const storedHash = combined.slice(16);\n\n    const data = encoder.encode(password);\n    const saltedPassword = new Uint8Array(salt.length + data.length);\n    saltedPassword.set(salt);\n    saltedPassword.set(data, salt.length);\n\n    const key = await crypto.subtle.importKey(\n      \"raw\",\n      encoder.encode(\"pepper\"), // \u4E0E\u54C8\u5E0C\u65F6\u76F8\u540C\u7684\u503C\n      { name: \"HMAC\", hash: \"SHA-256\" },\n      false,\n      [\"sign\"],\n    );\n\n    const signature = await crypto.subtle.sign(\"HMAC\", key, saltedPassword);\n\n    // \u6BD4\u8F83\u54C8\u5E0C\u503C\n    if (signature.byteLength !== storedHash.length) {\n      return false;\n    }\n\n    const signatureArray = new Uint8Array(signature);\n    for (let i = 0; i < signature.byteLength; i++) {\n      if (signatureArray[i] !== storedHash[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(\"Password verification error:\", error);\n    return false;\n  }\n}\n", "export interface Env {\n  DATABASE_URL?: string;\n  JWT_SECRET: string;\n  DEEPSEEK_API_KEY: string;\n  OPENAI_API_KEY?: string;\n  DB?: D1Database;\n  CACHE?: KVNamespace;\n\n  // \u652F\u4ED8\u76F8\u5173\n  STRIPE_SECRET_KEY?: string;\n  STRIPE_PUBLISHABLE_KEY?: string;\n  STRIPE_WEBHOOK_SECRET?: string;\n  ALIPAY_APP_ID?: string;\n  ALIPAY_PRIVATE_KEY?: string;\n  ALIPAY_PUBLIC_KEY?: string;\n\n  // \u90AE\u4EF6\u76F8\u5173\n  SENDGRID_API_KEY?: string;\n  SENDGRID_FROM_EMAIL?: string;\n  CLOUDFLARE_EMAIL_FROM?: string;\n\n  // Cloudflare \u670D\u52A1\n  CLOUDFLARE_ACCOUNT_ID?: string;\n  CLOUDFLARE_API_TOKEN?: string;\n  R2_ACCOUNT_ID?: string;\n\n  // R2 \u5B58\u50A8\n  AVATAR_BUCKET?: R2Bucket;\n\n  // \u5E94\u7528\u914D\u7F6E\n  API_URL?: string;\n  FRONTEND_URL?: string;\n}\n\n// Hono \u7C7B\u578B\u6269\u5C55\nexport interface Variables {\n  userId: string;\n  userRole: string;\n}\n\nexport interface JWTPayload {\n  userId: string;\n  email: string;\n  role: string;\n}\n\n// \u751F\u6210JWT\nexport async function generateJWT(\n  payload: JWTPayload,\n  secret: string,\n): Promise<string> {\n  const header = {\n    alg: \"HS256\",\n    typ: \"JWT\",\n  };\n\n  const encodedHeader = base64urlEncode(JSON.stringify(header));\n  const encodedPayload = base64urlEncode(JSON.stringify(payload));\n\n  const signature = await sign(`${encodedHeader}.${encodedPayload}`, secret);\n\n  return `${encodedHeader}.${encodedPayload}.${signature}`;\n}\n\n// \u9A8C\u8BC1JWT\nexport async function verifyJWT(\n  token: string,\n  secret: string,\n): Promise<JWTPayload> {\n  const [encodedHeader, encodedPayload, signature] = token.split(\".\");\n\n  // \u9A8C\u8BC1\u7B7E\u540D\n  const expectedSignature = await sign(\n    `${encodedHeader}.${encodedPayload}`,\n    secret,\n  );\n  if (signature !== expectedSignature) {\n    throw new Error(\"Invalid signature\");\n  }\n\n  // \u89E3\u6790payload\n  const payload = JSON.parse(base64urlDecode(encodedPayload));\n\n  // \u68C0\u67E5\u8FC7\u671F\u65F6\u95F4\uFF08\u5982\u679C\u6709\uFF09\n  if (payload.exp && Date.now() >= payload.exp * 1000) {\n    throw new Error(\"Token expired\");\n  }\n\n  return payload;\n}\n\n// \u4F7F\u7528HMAC-SHA256\u7B7E\u540D\nasync function sign(data: string, secret: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    encoder.encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"],\n  );\n\n  const signature = await crypto.subtle.sign(\"HMAC\", key, encoder.encode(data));\n  return base64urlEncode(new Uint8Array(signature));\n}\n\n// Base64URL\u7F16\u7801\nfunction base64urlEncode(str: string | Uint8Array): string {\n  if (typeof str === \"string\") {\n    str = new TextEncoder().encode(str);\n  }\n  return btoa(String.fromCharCode(...str))\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=/g, \"\");\n}\n\n// Base64URL\u89E3\u7801\nfunction base64urlDecode(str: string): string {\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  while (str.length % 4) {\n    str += \"=\";\n  }\n  return atob(str);\n}\n", "import { PrismaClient } from '@prisma/client/edge';\nimport { PrismaD1 } from '@prisma/adapter-d1';\n\nlet prisma: PrismaClient;\n\nexport function getPrismaClient(env: any) {\n  if (!prisma) {\n    // \u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u4F7F\u7528Supabase\uFF0C\u5728\u5F00\u53D1\u73AF\u5883\u4E2D\u4F7F\u7528D1\n    if (env.DATABASE_URL) {\n      // \u4F7F\u7528Supabase PostgreSQL\n      prisma = new PrismaClient({\n        datasources: {\n          db: {\n            url: env.DATABASE_URL,\n          },\n        },\n      });\n    } else if (env.DB) {\n      // \u4F7F\u7528D1\u6570\u636E\u5E93\n      const adapter = new PrismaD1(env.DB);\n      prisma = new PrismaClient({ adapter });\n    } else {\n      throw new Error('Database configuration missing');\n    }\n  }\n  return prisma;\n}", "// src/d1.ts\nimport {\n  Debug,\n  err,\n  ok\n} from \"@prisma/driver-adapter-utils\";\n\n// ../../node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs\nvar FORCE_COLOR;\nvar NODE_DISABLE_COLORS;\nvar NO_COLOR;\nvar TERM;\nvar isTTY = true;\nif (typeof process !== \"undefined\") {\n  ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n  isTTY = process.stdout && process.stdout.isTTY;\n}\nvar $ = {\n  enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== \"dumb\" && (FORCE_COLOR != null && FORCE_COLOR !== \"0\" || isTTY)\n};\nfunction init(x, y) {\n  let rgx = new RegExp(`\\\\x1b\\\\[${y}m`, \"g\");\n  let open = `\\x1B[${x}m`, close = `\\x1B[${y}m`;\n  return function(txt) {\n    if (!$.enabled || txt == null) return txt;\n    return open + (!!~(\"\" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n  };\n}\nvar reset = init(0, 0);\nvar bold = init(1, 22);\nvar dim = init(2, 22);\nvar italic = init(3, 23);\nvar underline = init(4, 24);\nvar inverse = init(7, 27);\nvar hidden = init(8, 28);\nvar strikethrough = init(9, 29);\nvar black = init(30, 39);\nvar red = init(31, 39);\nvar green = init(32, 39);\nvar yellow = init(33, 39);\nvar blue = init(34, 39);\nvar magenta = init(35, 39);\nvar cyan = init(36, 39);\nvar white = init(37, 39);\nvar gray = init(90, 39);\nvar grey = init(90, 39);\nvar bgBlack = init(40, 49);\nvar bgRed = init(41, 49);\nvar bgGreen = init(42, 49);\nvar bgYellow = init(43, 49);\nvar bgBlue = init(44, 49);\nvar bgMagenta = init(45, 49);\nvar bgCyan = init(46, 49);\nvar bgWhite = init(47, 49);\n\n// package.json\nvar name = \"@prisma/adapter-d1\";\n\n// src/conversion.ts\nimport { ColumnTypeEnum } from \"@prisma/driver-adapter-utils\";\nfunction getColumnTypes(columnNames, rows) {\n  const columnTypes = [];\n  columnLoop: for (let columnIndex = 0; columnIndex < columnNames.length; columnIndex++) {\n    for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      const candidateValue = rows[rowIndex][columnIndex];\n      if (candidateValue !== null) {\n        columnTypes[columnIndex] = inferColumnType(candidateValue);\n        continue columnLoop;\n      }\n    }\n    columnTypes[columnIndex] = ColumnTypeEnum.Int32;\n  }\n  return columnTypes;\n}\nfunction inferColumnType(value) {\n  switch (typeof value) {\n    case \"string\":\n      return inferStringType(value);\n    case \"number\":\n      return inferNumberType(value);\n    case \"object\":\n      return inferObjectType(value);\n    default:\n      throw new UnexpectedTypeError(value);\n  }\n}\nvar isoDateRegex = new RegExp(\n  /^(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))$/\n);\nvar sqliteDateRegex = /^\\d{4}-[0-1]\\d-[0-3]\\d [0-2]\\d:[0-5]\\d:[0-5]\\d$/;\nfunction isISODate(str) {\n  return isoDateRegex.test(str) || sqliteDateRegex.test(str);\n}\nfunction inferStringType(value) {\n  if (isISODate(value)) {\n    return ColumnTypeEnum.DateTime;\n  }\n  return ColumnTypeEnum.Text;\n}\nfunction inferNumberType(_) {\n  return ColumnTypeEnum.Double;\n}\nfunction inferObjectType(value) {\n  if (value instanceof Array) {\n    return ColumnTypeEnum.Bytes;\n  }\n  throw new UnexpectedTypeError(value);\n}\nvar UnexpectedTypeError = class extends Error {\n  constructor(value) {\n    const type = typeof value;\n    const repr = type === \"object\" ? JSON.stringify(value) : String(value);\n    super(`unexpected value of type ${type}: ${repr}`);\n    this.name = \"UnexpectedTypeError\";\n  }\n};\nfunction mapRow(result, columnTypes) {\n  for (let i = 0; i < result.length; i++) {\n    const value = result[i];\n    if (value instanceof ArrayBuffer) {\n      result[i] = Array.from(new Uint8Array(value));\n      continue;\n    }\n    if (typeof value === \"number\" && (columnTypes[i] === ColumnTypeEnum.Int32 || columnTypes[i] === ColumnTypeEnum.Int64) && !Number.isInteger(value)) {\n      result[i] = Math.trunc(value);\n      continue;\n    }\n    if (typeof value === \"bigint\") {\n      result[i] = value.toString();\n      continue;\n    }\n    if (columnTypes[i] === ColumnTypeEnum.Boolean) {\n      result[i] = JSON.parse(value);\n    }\n  }\n  return result;\n}\n\n// src/utils.ts\nfunction cleanArg(arg, argType) {\n  if (arg !== null) {\n    if (argType === \"Int64\") {\n      const asInt56 = Number.parseInt(arg);\n      if (!Number.isSafeInteger(asInt56)) {\n        throw new Error(`Invalid Int64-encoded value received: ${arg}`);\n      }\n      return asInt56;\n    }\n    if (argType === \"Int32\") {\n      return Number.parseInt(arg);\n    }\n    if (argType === \"Float\" || argType === \"Double\") {\n      return Number.parseFloat(arg);\n    }\n    if (arg === true) {\n      return 1;\n    }\n    if (arg === false) {\n      return 0;\n    }\n    if (arg instanceof Uint8Array) {\n      return Array.from(arg);\n    }\n  }\n  return arg;\n}\nfunction matchSQLiteErrorCode(message) {\n  let extendedCode = 1;\n  if (!message) return extendedCode;\n  if (message.startsWith(\"D1_ERROR: UNIQUE constraint failed:\")) {\n    extendedCode = 2067;\n  } else if (message.startsWith(\"D1_ERROR: FOREIGN KEY constraint failed\")) {\n    extendedCode = 787;\n  } else if (message.startsWith(\"D1_ERROR: NOT NULL constraint failed\")) {\n    extendedCode = 1299;\n  } else if (message.startsWith(\"D1_ERROR: CHECK constraint failed\")) {\n    extendedCode = 1811;\n  } else if (message.startsWith(\"D1_ERROR: PRIMARY KEY constraint failed\")) {\n    extendedCode = 1555;\n  }\n  return extendedCode;\n}\n\n// src/d1.ts\nvar debug = Debug(\"prisma:driver-adapter:d1\");\nvar D1Queryable = class {\n  constructor(client) {\n    this.client = client;\n    this.provider = \"sqlite\";\n    this.adapterName = name;\n  }\n  /**\n   * Execute a query given as SQL, interpolating the given parameters.\n   */\n  async queryRaw(query) {\n    const tag = \"[js::query_raw]\";\n    debug(`${tag} %O`, query);\n    const ioResult = await this.performIO(query);\n    return ioResult.map((data) => {\n      const convertedData = this.convertData(data);\n      return convertedData;\n    });\n  }\n  convertData(ioResult) {\n    const columnNames = ioResult[0];\n    const results = ioResult[1];\n    if (results.length === 0) {\n      return {\n        columnNames: [],\n        columnTypes: [],\n        rows: []\n      };\n    }\n    const columnTypes = Object.values(getColumnTypes(columnNames, results));\n    const rows = results.map((value) => mapRow(value, columnTypes));\n    return {\n      columnNames,\n      // * Note: without Object.values the array looks like\n      // * columnTypes: [ id: 128 ],\n      // * and errors with:\n      // * \u2718 [ERROR] A hanging Promise was canceled. This happens when the worker runtime is waiting for a Promise from JavaScript to resolve, but has detected that the Promise cannot possibly ever resolve because all code and events related to the Promise's I/O context have already finished.\n      columnTypes,\n      rows\n    };\n  }\n  /**\n   * Execute a query given as SQL, interpolating the given parameters and\n   * returning the number of affected rows.\n   * Note: Queryable expects a u64, but napi.rs only supports u32.\n   */\n  async executeRaw(query) {\n    const tag = \"[js::execute_raw]\";\n    debug(`${tag} %O`, query);\n    const res = await this.performIO(query, true);\n    return res.map((result) => result.meta.changes ?? 0);\n  }\n  async performIO(query, executeRaw = false) {\n    try {\n      query.args = query.args.map((arg, i) => cleanArg(arg, query.argTypes[i]));\n      const stmt = this.client.prepare(query.sql).bind(...query.args);\n      if (executeRaw) {\n        return ok(await stmt.run());\n      } else {\n        const [columnNames, ...rows] = await stmt.raw({ columnNames: true });\n        return ok([columnNames, rows]);\n      }\n    } catch (e) {\n      console.error(\"Error in performIO: %O\", e);\n      const { message } = e;\n      return err({\n        kind: \"Sqlite\",\n        extendedCode: matchSQLiteErrorCode(message),\n        message\n      });\n    }\n  }\n};\nvar D1Transaction = class extends D1Queryable {\n  constructor(client, options) {\n    super(client);\n    this.options = options;\n  }\n  async commit() {\n    debug(`[js::commit]`);\n    return ok(void 0);\n  }\n  async rollback() {\n    debug(`[js::rollback]`);\n    return ok(void 0);\n  }\n};\nvar D1TransactionContext = class extends D1Queryable {\n  constructor(client) {\n    super(client);\n    this.client = client;\n  }\n  async startTransaction() {\n    const options = {\n      // TODO: D1 does not have a Transaction API.\n      usePhantomQuery: true\n    };\n    const tag = \"[js::startTransaction]\";\n    debug(\"%s options: %O\", tag, options);\n    return ok(new D1Transaction(this.client, options));\n  }\n};\nvar PrismaD1 = class extends D1Queryable {\n  constructor(client) {\n    super(client);\n    this.tags = {\n      error: red(\"prisma:error\"),\n      warn: yellow(\"prisma:warn\"),\n      info: cyan(\"prisma:info\"),\n      query: blue(\"prisma:query\")\n    };\n    this.alreadyWarned = /* @__PURE__ */ new Set();\n    /**\n     * This will warn once per transaction\n     * e.g. the following two explicit transactions\n     * will only trigger _two_ warnings\n     *\n     * ```ts\n     * await prisma.$transaction([ ...queries ])\n     * await prisma.$transaction([ ...moreQueries ])\n     * ```\n     */\n    this.warnOnce = (key, message, ...args) => {\n      if (!this.alreadyWarned.has(key)) {\n        this.alreadyWarned.add(key);\n        console.info(`${this.tags.warn} ${message}`, ...args);\n      }\n    };\n  }\n  getConnectionInfo() {\n    return ok({\n      maxBindValues: 98\n    });\n  }\n  async transactionContext() {\n    this.warnOnce(\n      \"D1 Transaction\",\n      \"Cloudflare D1 does not support transactions yet. When using Prisma's D1 adapter, implicit & explicit transactions will be ignored and run as individual queries, which breaks the guarantees of the ACID properties of transactions. For more details see https://pris.ly/d/d1-transactions\"\n    );\n    return ok(new D1TransactionContext(this.client));\n  }\n};\nexport {\n  PrismaD1\n};\n", "// src/result.ts\nfunction ok(value) {\n  return {\n    ok: true,\n    value,\n    map(fn) {\n      return ok(fn(value));\n    },\n    flatMap(fn) {\n      return fn(value);\n    }\n  };\n}\nfunction err(error) {\n  return {\n    ok: false,\n    error,\n    map() {\n      return err(error);\n    },\n    flatMap() {\n      return err(error);\n    }\n  };\n}\n\n// src/binder.ts\nvar ErrorRegistryInternal = class {\n  constructor() {\n    this.registeredErrors = [];\n  }\n  consumeError(id) {\n    return this.registeredErrors[id];\n  }\n  registerNewError(error) {\n    let i = 0;\n    while (this.registeredErrors[i] !== void 0) {\n      i++;\n    }\n    this.registeredErrors[i] = { error };\n    return i;\n  }\n};\nvar bindAdapter = (adapter) => {\n  const errorRegistry = new ErrorRegistryInternal();\n  const createTransactionContext = wrapAsync(errorRegistry, adapter.transactionContext.bind(adapter));\n  const boundAdapter = {\n    adapterName: adapter.adapterName,\n    errorRegistry,\n    queryRaw: wrapAsync(errorRegistry, adapter.queryRaw.bind(adapter)),\n    executeRaw: wrapAsync(errorRegistry, adapter.executeRaw.bind(adapter)),\n    provider: adapter.provider,\n    transactionContext: async (...args) => {\n      const ctx = await createTransactionContext(...args);\n      return ctx.map((tx) => bindTransactionContext(errorRegistry, tx));\n    }\n  };\n  if (adapter.getConnectionInfo) {\n    boundAdapter.getConnectionInfo = wrapSync(errorRegistry, adapter.getConnectionInfo.bind(adapter));\n  }\n  return boundAdapter;\n};\nvar bindTransactionContext = (errorRegistry, ctx) => {\n  const startTransaction = wrapAsync(errorRegistry, ctx.startTransaction.bind(ctx));\n  return {\n    adapterName: ctx.adapterName,\n    provider: ctx.provider,\n    queryRaw: wrapAsync(errorRegistry, ctx.queryRaw.bind(ctx)),\n    executeRaw: wrapAsync(errorRegistry, ctx.executeRaw.bind(ctx)),\n    startTransaction: async (...args) => {\n      const result = await startTransaction(...args);\n      return result.map((tx) => bindTransaction(errorRegistry, tx));\n    }\n  };\n};\nvar bindTransaction = (errorRegistry, transaction) => {\n  return {\n    adapterName: transaction.adapterName,\n    provider: transaction.provider,\n    options: transaction.options,\n    queryRaw: wrapAsync(errorRegistry, transaction.queryRaw.bind(transaction)),\n    executeRaw: wrapAsync(errorRegistry, transaction.executeRaw.bind(transaction)),\n    commit: wrapAsync(errorRegistry, transaction.commit.bind(transaction)),\n    rollback: wrapAsync(errorRegistry, transaction.rollback.bind(transaction))\n  };\n};\nfunction wrapAsync(registry, fn) {\n  return async (...args) => {\n    try {\n      return await fn(...args);\n    } catch (error) {\n      const id = registry.registerNewError(error);\n      return err({ kind: \"GenericJs\", id });\n    }\n  };\n}\nfunction wrapSync(registry, fn) {\n  return (...args) => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      const id = registry.registerNewError(error);\n      return err({ kind: \"GenericJs\", id });\n    }\n  };\n}\n\n// src/const.ts\nvar ColumnTypeEnum = {\n  // Scalars\n  Int32: 0,\n  Int64: 1,\n  Float: 2,\n  Double: 3,\n  Numeric: 4,\n  Boolean: 5,\n  Character: 6,\n  Text: 7,\n  Date: 8,\n  Time: 9,\n  DateTime: 10,\n  Json: 11,\n  Enum: 12,\n  Bytes: 13,\n  Set: 14,\n  Uuid: 15,\n  // Arrays\n  Int32Array: 64,\n  Int64Array: 65,\n  FloatArray: 66,\n  DoubleArray: 67,\n  NumericArray: 68,\n  BooleanArray: 69,\n  CharacterArray: 70,\n  TextArray: 71,\n  DateArray: 72,\n  TimeArray: 73,\n  DateTimeArray: 74,\n  JsonArray: 75,\n  EnumArray: 76,\n  BytesArray: 77,\n  UuidArray: 78,\n  // Custom\n  UnknownNumber: 128\n};\n\n// src/debug.ts\nimport { Debug } from \"@prisma/debug\";\nexport {\n  ColumnTypeEnum,\n  Debug,\n  bindAdapter,\n  err,\n  ok\n};\n", "import { Hono } from \"hono\";\nimport { PrismaClient } from \"@prisma/client/edge\";\nimport { verifyJWT } from \"../lib/auth\";\nimport { getPrismaClient } from \"../lib/db\";\nimport { calculateBaziResult, BaziInput } from \"../lib/bazi\";\nimport { Env, Variables } from \"../lib/auth\";\n\nexport const baziRoutes = new Hono<{ Bindings: Env; Variables: Variables }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header(\"Authorization\");\n  if (!authorization || !authorization.startsWith(\"Bearer \")) {\n    return c.json({ error: \"Missing or invalid token\" }, 401);\n  }\n\n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set(\"userId\", payload.userId);\n    c.set(\"userRole\", payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: \"Invalid token\" }, 401);\n  }\n}\n\n// \u8BA1\u7B97\u516B\u5B57\nbaziRoutes.post(\"/calculate\", authMiddleware, async (c) => {\n  try {\n    const userId = c.get(\"userId\");\n    const baziInput: BaziInput = await c.req.json();\n\n    // \u9A8C\u8BC1\u8F93\u5165\n    if (\n      !baziInput.year ||\n      !baziInput.month ||\n      !baziInput.day ||\n      !baziInput.hour\n    ) {\n      return c.json({ error: \"Missing required date/time fields\" }, 400);\n    }\n\n    // \u8BA1\u7B97\u516B\u5B57\n    const baziResult = calculateBaziResult(baziInput);\n\n    // \u4FDD\u5B58\u5230\u6570\u636E\u5E93\n    const prisma = getPrismaClient(c.env);\n\n    const baziData = await prisma.baziData.create({\n      data: {\n        userId,\n        inputData: baziInput,\n        resultData: baziResult,\n      },\n    });\n\n    return c.json({\n      id: baziData.id,\n      input: baziInput,\n      result: baziResult,\n      createdAt: baziData.createdAt,\n    });\n  } catch (error) {\n    console.error(\"Bazi calculation error:\", error);\n    return c.json({ error: \"Failed to calculate bazi\" }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u7684\u516B\u5B57\u5386\u53F2\u8BB0\u5F55\nbaziRoutes.get(\"/history\", authMiddleware, async (c) => {\n  try {\n    const userId = c.get(\"userId\");\n    const page = parseInt(c.req.query(\"page\") || \"1\");\n    const limit = parseInt(c.req.query(\"limit\") || \"10\");\n\n    const prisma = getPrismaClient(c.env);\n\n    const [baziData, total] = await Promise.all([\n      prisma.baziData.findMany({\n        where: { userId },\n        orderBy: { createdAt: \"desc\" },\n        skip: (page - 1) * limit,\n        take: limit,\n        select: {\n          id: true,\n          inputData: true,\n          resultData: true,\n          analysis: true,\n          createdAt: true,\n        },\n      }),\n      prisma.baziData.count({ where: { userId } }),\n    ]);\n\n    return c.json({\n      data: baziData,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error(\"Get bazi history error:\", error);\n    return c.json({ error: \"Failed to get bazi history\" }, 500);\n  }\n});\n\n// \u83B7\u53D6\u516B\u5B57\u8BE6\u60C5\nbaziRoutes.get(\"/:id\", authMiddleware, async (c) => {\n  try {\n    const userId = c.get(\"userId\");\n    const baziId = c.req.param(\"id\");\n\n    const prisma = getPrismaClient(c.env);\n\n    const baziData = await prisma.baziData.findFirst({\n      where: {\n        id: baziId,\n        userId, // \u786E\u4FDD\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u81EA\u5DF1\u7684\u6570\u636E\n      },\n    });\n\n    if (!baziData) {\n      return c.json({ error: \"Bazi data not found\" }, 404);\n    }\n\n    return c.json({\n      id: baziData.id,\n      input: baziData.inputData,\n      result: baziData.resultData,\n      analysis: baziData.analysis,\n      createdAt: baziData.createdAt,\n    });\n  } catch (error) {\n    console.error(\"Get bazi detail error:\", error);\n    return c.json({ error: \"Failed to get bazi detail\" }, 500);\n  }\n});\n\n// \u66F4\u65B0\u516B\u5B57\u8BB0\u5F55\nbaziRoutes.put(\"/:id\", authMiddleware, async (c) => {\n  try {\n    const userId = c.get(\"userId\");\n    const baziId = c.req.param(\"id\");\n    const baziInput: BaziInput = await c.req.json();\n\n    // \u9A8C\u8BC1\u8F93\u5165\n    if (\n      !baziInput.year ||\n      !baziInput.month ||\n      !baziInput.day ||\n      !baziInput.hour\n    ) {\n      return c.json({ error: \"Missing required date/time fields\" }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u68C0\u67E5\u8BB0\u5F55\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingBazi = await prisma.baziData.findFirst({\n      where: {\n        id: baziId,\n        userId,\n      },\n    });\n\n    if (!existingBazi) {\n      return c.json({ error: \"Bazi data not found\" }, 404);\n    }\n\n    // \u91CD\u65B0\u8BA1\u7B97\u516B\u5B57\n    const baziResult = calculateBaziResult(baziInput);\n\n    // \u66F4\u65B0\u8BB0\u5F55\n    const updatedBazi = await prisma.baziData.update({\n      where: { id: baziId },\n      data: {\n        inputData: baziInput,\n        resultData: baziResult,\n      },\n    });\n\n    return c.json({\n      id: updatedBazi.id,\n      input: baziInput,\n      result: baziResult,\n      analysis: updatedBazi.analysis,\n      createdAt: updatedBazi.createdAt,\n    });\n  } catch (error) {\n    console.error(\"Update bazi error:\", error);\n    return c.json({ error: \"Failed to update bazi\" }, 500);\n  }\n});\n\n// \u5220\u9664\u516B\u5B57\u8BB0\u5F55\nbaziRoutes.delete(\"/:id\", authMiddleware, async (c) => {\n  try {\n    const userId = c.get(\"userId\");\n    const baziId = c.req.param(\"id\");\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u68C0\u67E5\u8BB0\u5F55\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingBazi = await prisma.baziData.findFirst({\n      where: {\n        id: baziId,\n        userId,\n      },\n    });\n\n    if (!existingBazi) {\n      return c.json({ error: \"Bazi data not found\" }, 404);\n    }\n\n    // \u5220\u9664\u8BB0\u5F55\n    await prisma.baziData.delete({\n      where: { id: baziId },\n    });\n\n    return c.json({ message: \"Bazi data deleted successfully\" });\n  } catch (error) {\n    console.error(\"Delete bazi error:\", error);\n    return c.json({ error: \"Failed to delete bazi\" }, 500);\n  }\n});\n", "export interface BaziInput {\n  year: number;\n  month: number;\n  day: number;\n  hour: number;\n  minute: number;\n  gender: 'male' | 'female';\n  name?: string;\n  timezone?: string;\n}\n\nexport interface BaziResult {\n  yearPillar: string;\n  monthPillar: string;\n  dayPillar: string;\n  hourPillar: string;\n  dayMaster: string;\n  zodiac: string;\n  nayin: string;\n  season: string;\n  solarTerms: string[];\n  lunarDate: string;\n  fiveElements: Record<string, number>;\n  shiShen: Record<string, string>;\n  yongShen: string[];\n  xiShen: string[];\n  jiShen: string[];\n  luckyElements: string[];\n  colors: string[];\n  numbers: number[];\n  directions: string[];\n}\n\nexport function calculateBaziResult(input: BaziInput): BaziResult {\n  // \u5929\u5E72\u5730\u652F\u6570\u7EC4\n  const tianGan = [\"\u7532\", \"\u4E59\", \"\u4E19\", \"\u4E01\", \"\u620A\", \"\u5DF1\", \"\u5E9A\", \"\u8F9B\", \"\u58EC\", \"\u7678\"];\n  const diZhi = [\"\u5B50\", \"\u4E11\", \"\u5BC5\", \"\u536F\", \"\u8FB0\", \"\u5DF3\", \"\u5348\", \"\u672A\", \"\u7533\", \"\u9149\", \"\u620C\", \"\u4EA5\"];\n\n  // \u751F\u8096\u6570\u7EC4\n  const zodiac = [\"\u9F20\", \"\u725B\", \"\u864E\", \"\u5154\", \"\u9F99\", \"\u86C7\", \"\u9A6C\", \"\u7F8A\", \"\u7334\", \"\u9E21\", \"\u72D7\", \"\u732A\"];\n\n  // \u7B80\u5316\u7684\u516B\u5B57\u8BA1\u7B97\uFF08\u5B9E\u9645\u5E94\u4F7F\u7528\u4E13\u4E1A\u7684\u519C\u5386\u8F6C\u6362\u5E93\uFF09\n  const yearIndex = (input.year - 4) % 60;\n  const yearTianGan = tianGan[yearIndex % 10];\n  const yearDiZhi = diZhi[yearIndex % 12];\n\n  const monthIndex = (input.month - 1 + yearIndex * 12) % 60;\n  const monthTianGan = tianGan[monthIndex % 10];\n  const monthDiZhi = diZhi[monthIndex % 12];\n\n  const dayIndex = (input.year * 365 + input.month * 30 + input.day) % 60;\n  const dayTianGan = tianGan[dayIndex % 10];\n  const dayDiZhi = diZhi[dayIndex % 12];\n\n  const hourIndex = (Math.floor(input.hour / 2) + dayIndex * 12) % 60;\n  const hourTianGan = tianGan[hourIndex % 10];\n  const hourDiZhi = diZhi[hourIndex % 12];\n\n  return {\n    yearPillar: yearTianGan + yearDiZhi,\n    monthPillar: monthTianGan + monthDiZhi,\n    dayPillar: dayTianGan + dayDiZhi,\n    hourPillar: hourTianGan + hourDiZhi,\n    dayMaster: dayTianGan,\n    zodiac: zodiac[(input.year - 4) % 12],\n    nayin: \"\u6D77\u4E2D\u91D1\", // \u7B80\u5316\u5904\u7406\n    season: getSeason(input.month),\n    solarTerms: [\"\u7ACB\u6625\", \"\u96E8\u6C34\"], // \u7B80\u5316\u5904\u7406\n    lunarDate: \"\u519C\u5386\u6B63\u6708\u521D\u4E00\", // \u7B80\u5316\u5904\u7406\uFF0C\u5B9E\u9645\u9700\u8981\u8F6C\u6362\n    fiveElements: {\n      \"\u6728\": 2,\n      \"\u706B\": 1,\n      \"\u571F\": 2,\n      \"\u91D1\": 2,\n      \"\u6C34\": 1,\n    },\n    shiShen: {\n      \"\u5E74\": \"\u6B63\u5B98\",\n      \"\u6708\": \"\u504F\u8D22\",\n      \"\u65E5\": \"\u65E5\u4E3B\",\n      \"\u65F6\": \"\u98DF\u795E\",\n    },\n    yongShen: [\"\u6C34\", \"\u6728\"],\n    xiShen: [\"\u91D1\"],\n    jiShen: [\"\u706B\", \"\u571F\"],\n    luckyElements: [\"\u6C34\", \"\u6728\", \"\u91D1\"],\n    colors: [\"\u9ED1\u8272\", \"\u84DD\u8272\", \"\u7EFF\u8272\", \"\u767D\u8272\"],\n    numbers: [1, 6, 3, 8, 4, 9],\n    directions: [\"\u5317\u65B9\", \"\u4E1C\u65B9\", \"\u897F\u65B9\"],\n  };\n}\n\nfunction getSeason(month: number): string {\n  switch (true) {\n    case month >= 3 && month <= 5:\n      return \"\u6625\u5B63\";\n    case month >= 6 && month <= 8:\n      return \"\u590F\u5B63\";\n    case month >= 9 && month <= 11:\n      return \"\u79CB\u5B63\";\n    default:\n      return \"\u51AC\u5B63\";\n  }\n}", "import { Hono } from 'hono';\nimport { PrismaClient } from '@prisma/client/edge';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { analyzeBaziWithAI, AIAnalysisRequest } from '../lib/ai';\nimport { Env } from '../lib/auth';\n\nexport const aiRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n  \n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// AI\u5206\u6790\u516B\u5B57\naiRoutes.post('/analyze', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { baziId, language = 'zh', aspects }: AIAnalysisRequest = await c.req.json();\n    \n    if (!baziId) {\n      return c.json({ error: 'Missing baziId' }, 400);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u83B7\u53D6\u516B\u5B57\u6570\u636E\n    const baziData = await prisma.baziData.findFirst({\n      where: {\n        id: baziId,\n        userId, // \u786E\u4FDD\u7528\u6237\u53EA\u80FD\u5206\u6790\u81EA\u5DF1\u7684\u6570\u636E\n      },\n    });\n    \n    if (!baziData) {\n      return c.json({ error: 'Bazi data not found' }, 404);\n    }\n    \n    // \u5982\u679C\u5DF2\u6709\u5206\u6790\u7ED3\u679C\u4E14\u4E0D\u5F3A\u5236\u91CD\u65B0\u5206\u6790\uFF0C\u76F4\u63A5\u8FD4\u56DE\n    if (baziData.analysis && !c.req.query('force')) {\n      return c.json({\n        id: baziData.id,\n        analysis: baziData.analysis,\n        language,\n        aspects,\n      });\n    }\n    \n    // \u8C03\u7528AI\u5206\u6790\n    const analysisResult = await analyzeBaziWithAI(\n      baziData.inputData as any,\n      baziData.resultData as any,\n      language as 'zh' | 'en',\n      aspects\n    );\n    \n    // \u4FDD\u5B58\u5206\u6790\u7ED3\u679C\n    await prisma.baziData.update({\n      where: { id: baziId },\n      data: {\n        analysis: analysisResult.analysis,\n      },\n    });\n    \n    return c.json({\n      id: baziData.id,\n      ...analysisResult,\n      language,\n      aspects,\n    });\n  } catch (error) {\n    console.error('AI analysis error:', error);\n    return c.json({ error: 'Failed to analyze bazi' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u5206\u6790\u5386\u53F2\naiRoutes.get('/history', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const [baziData, total] = await Promise.all([\n      prisma.baziData.findMany({\n        where: { \n          userId,\n          analysis: { not: null } // \u53EA\u8FD4\u56DE\u6709\u5206\u6790\u7ED3\u679C\u7684\u8BB0\u5F55\n        },\n        orderBy: { createdAt: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit,\n        select: {\n          id: true,\n          inputData: true,\n          resultData: true,\n          analysis: true,\n          createdAt: true,\n        },\n      }),\n      prisma.baziData.count({ \n        where: { \n          userId,\n          analysis: { not: null }\n        }\n      }),\n    ]);\n    \n    return c.json({\n      data: baziData,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error('Get AI analysis history error:', error);\n    return c.json({ error: 'Failed to get analysis history' }, 500);\n  }\n});\n\n// \u5220\u9664\u5206\u6790\u7ED3\u679C\naiRoutes.delete('/:baziId', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const baziId = c.req.param('baziId');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u8BB0\u5F55\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingBazi = await prisma.baziData.findFirst({\n      where: {\n        id: baziId,\n        userId,\n      },\n    });\n    \n    if (!existingBazi) {\n      return c.json({ error: 'Bazi data not found' }, 404);\n    }\n    \n    // \u5220\u9664\u5206\u6790\u7ED3\u679C\uFF08\u8BBE\u7F6E\u4E3Anull\uFF09\n    await prisma.baziData.update({\n      where: { id: baziId },\n      data: {\n        analysis: null,\n      },\n    });\n    \n    return c.json({ message: 'Analysis deleted successfully' });\n  } catch (error) {\n    console.error('Delete analysis error:', error);\n    return c.json({ error: 'Failed to delete analysis' }, 500);\n  }\n});", "import { BaziInput, BaziResult } from './bazi';\n\nexport interface AIAnalysisRequest {\n  baziId: string;\n  language?: 'zh' | 'en';\n  aspects?: string[]; // \u5206\u6790\u65B9\u9762\uFF0C\u5982\"career\", \"marriage\", \"health\"\u7B49\n}\n\nexport interface AIAnalysisResult {\n  analysis: string;\n  aspects: string[];\n  suggestions: string[];\n  luckyPeriods: string[];\n  warnings: string[];\n}\n\nexport async function analyzeBaziWithAI(\n  baziInput: BaziInput,\n  baziResult: BaziResult,\n  language: 'zh' | 'en' = 'zh',\n  aspects?: string[]\n): Promise<AIAnalysisResult> {\n  const prompt = buildPrompt(baziInput, baziResult, language, aspects);\n  const systemPrompt = getSystemPrompt(language);\n  \n  try {\n    const response = await fetch('https://api.deepseek.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${process.env.DEEPSEEK_API_KEY}`,\n      },\n      body: JSON.stringify({\n        model: 'deepseek-chat',\n        messages: [\n          { role: 'system', content: systemPrompt },\n          { role: 'user', content: prompt }\n        ],\n        temperature: 0.7,\n        max_tokens: 1500,\n      }),\n    });\n    \n    if (!response.ok) {\n      throw new Error(`DeepSeek API error: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    const content = data.choices[0]?.message?.content || '';\n    \n    // \u89E3\u6790AI\u8FD4\u56DE\u7684\u5185\u5BB9\n    return parseAIResponse(content, language);\n  } catch (error) {\n    console.error('AI analysis error:', error);\n    throw new Error('Failed to analyze bazi with AI');\n  }\n}\n\nfunction buildPrompt(\n  baziInput: BaziInput,\n  baziResult: BaziResult,\n  language: 'zh' | 'en',\n  aspects?: string[]\n): string {\n  if (language === 'en') {\n    return `\n    Please analyze the following Bazi (Four Pillars of Destiny) chart:\n    \n    Personal Information:\n    - Name: ${baziInput.name || 'Unknown'}\n    - Gender: ${baziInput.gender}\n    - Birth Date: ${baziInput.year}-${baziInput.month}-${baziInput.day} ${baziInput.hour}:${baziInput.minute}\n    \n    Bazi Chart:\n    - Year Pillar: ${baziResult.yearPillar}\n    - Month Pillar: ${baziResult.monthPillar}\n    - Day Pillar: ${baziResult.dayPillar}\n    - Hour Pillar: ${baziResult.hourPillar}\n    - Day Master: ${baziResult.dayMaster}\n    - Zodiac: ${baziResult.zodiac}\n    - Nayin: ${baziResult.nayin}\n    - Season: ${baziResult.season}\n    \n    Five Elements Distribution:\n    - Wood: ${baziResult.fiveElements['\u6728']}\n    - Fire: ${baziResult.fiveElements['\u706B']}\n    - Earth: ${baziResult.fiveElements['\u571F']}\n    - Metal: ${baziResult.fiveElements['\u91D1']}\n    - Water: ${baziResult.fiveElements['\u6C34']}\n    \n    ${aspects ? `Please focus on these aspects: ${aspects.join(', ')}` : 'Please provide a comprehensive analysis covering career, relationships, health, and wealth.'}\n    \n    Please provide:\n    1. A detailed personality analysis\n    2. Strengths and weaknesses\n    3. Career prospects\n    4. Relationship compatibility\n    5. Health considerations\n    6. Wealth potential\n    7. Lucky periods and colors\n    8. Recommendations for balancing the elements\n    `;\n  } else {\n    return `\n    \u8BF7\u5206\u6790\u4EE5\u4E0B\u516B\u5B57\u547D\u76D8\uFF1A\n    \n    \u4E2A\u4EBA\u4FE1\u606F\uFF1A\n    - \u59D3\u540D\uFF1A${baziInput.name || '\u672A\u77E5'}\n    - \u6027\u522B\uFF1A${baziInput.gender === 'male' ? '\u7537' : '\u5973'}\n    - \u51FA\u751F\u65E5\u671F\uFF1A${baziInput.year}\u5E74${baziInput.month}\u6708${baziInput.day}\u65E5${baziInput.hour}\u65F6${baziInput.minute}\u5206\n    \n    \u516B\u5B57\u547D\u76D8\uFF1A\n    - \u5E74\u67F1\uFF1A${baziResult.yearPillar}\n    - \u6708\u67F1\uFF1A${baziResult.monthPillar}\n    - \u65E5\u67F1\uFF1A${baziResult.dayPillar}\n    - \u65F6\u67F1\uFF1A${baziResult.hourPillar}\n    - \u65E5\u4E3B\uFF1A${baziResult.dayMaster}\n    - \u751F\u8096\uFF1A${baziResult.zodiac}\n    - \u7EB3\u97F3\uFF1A${baziResult.nayin}\n    - \u5B63\u8282\uFF1A${baziResult.season}\n    \n    \u4E94\u884C\u5206\u5E03\uFF1A\n    - \u6728\uFF1A${baziResult.fiveElements['\u6728']}\n    - \u706B\uFF1A${baziResult.fiveElements['\u706B']}\n    - \u571F\uFF1A${baziResult.fiveElements['\u571F']}\n    - \u91D1\uFF1A${baziResult.fiveElements['\u91D1']}\n    - \u6C34\uFF1A${baziResult.fiveElements['\u6C34']}\n    \n    ${aspects ? `\u8BF7\u91CD\u70B9\u5206\u6790\u4EE5\u4E0B\u65B9\u9762\uFF1A${aspects.join('\u3001')}` : '\u8BF7\u63D0\u4F9B\u5168\u9762\u5206\u6790\uFF0C\u5305\u62EC\u4E8B\u4E1A\u3001\u5A5A\u59FB\u3001\u5065\u5EB7\u548C\u8D22\u8FD0\u7B49\u65B9\u9762\u3002'}\n    \n    \u8BF7\u63D0\u4F9B\uFF1A\n    1. \u6027\u683C\u7279\u70B9\u5206\u6790\n    2. \u4F18\u52BF\u4E0E\u52A3\u52BF\n    3. \u4E8B\u4E1A\u53D1\u5C55\u524D\u666F\n    4. \u5A5A\u59FB\u60C5\u611F\u72B6\u51B5\n    5. \u5065\u5EB7\u6CE8\u610F\u4E8B\u9879\n    6. \u8D22\u8FD0\u72B6\u51B5\n    7. \u5409\u7965\u65F6\u671F\u4E0E\u989C\u8272\n    8. \u5E73\u8861\u4E94\u884C\u7684\u5EFA\u8BAE\n    `;\n  }\n}\n\nfunction getSystemPrompt(language: 'zh' | 'en'): string {\n  if (language === 'en') {\n    return `\n    You are a professional Chinese astrologer and Bazi (Four Pillars of Destiny) expert with deep knowledge of Chinese metaphysics, \n    Five Elements theory, and traditional Chinese fortune-telling. Your analysis should be:\n    \n    1. Professional and insightful\n    2. Balanced and positive, avoiding overly negative predictions\n    3. Culturally sensitive and respectful\n    4. Practical with actionable advice\n    5. Structured with clear sections\n    \n    Provide a comprehensive analysis based on the Bazi chart information provided, focusing on giving helpful insights \n    rather than deterministic predictions. Emphasize that Bazi is a tool for self-understanding and guidance, \n    not absolute fate.\n    `;\n  } else {\n    return `\n    \u4F60\u662F\u4E00\u4F4D\u4E13\u4E1A\u7684\u4E2D\u56FD\u5360\u661F\u672F\u5927\u5E08\u548C\u516B\u5B57\u547D\u7406\u4E13\u5BB6\uFF0C\u62E5\u6709\u6DF1\u539A\u7684\u4E2D\u56FD\u7384\u5B66\u3001\u4E94\u884C\u7406\u8BBA\u548C\u4F20\u7EDF\u7B97\u547D\u77E5\u8BC6\u3002\u4F60\u7684\u5206\u6790\u5E94\u8BE5\uFF1A\n    \n    1. \u4E13\u4E1A\u4E14\u6709\u6D1E\u5BDF\u529B\n    2. \u5E73\u8861\u79EF\u6781\uFF0C\u907F\u514D\u8FC7\u4E8E\u6D88\u6781\u7684\u9884\u6D4B\n    3. \u6587\u5316\u654F\u611F\u4E14\u5C0A\u91CD\n    4. \u5B9E\u7528\u4E14\u5177\u6709\u53EF\u64CD\u4F5C\u6027\u7684\u5EFA\u8BAE\n    5. \u7ED3\u6784\u6E05\u6670\uFF0C\u5206\u6BB5\u660E\u786E\n    \n    \u57FA\u4E8E\u63D0\u4F9B\u7684\u516B\u5B57\u547D\u76D8\u4FE1\u606F\u8FDB\u884C\u5168\u9762\u5206\u6790\uFF0C\u91CD\u70B9\u63D0\u4F9B\u6709\u7528\u7684\u89C1\u89E3\u800C\u975E\u51B3\u5B9A\u6027\u9884\u6D4B\u3002\u5F3A\u8C03\u516B\u5B57\u662F\u81EA\u6211\u7406\u89E3\u548C\u6307\u5BFC\u7684\u5DE5\u5177\uFF0C\n    \u800C\u975E\u7EDD\u5BF9\u547D\u8FD0\u3002\n    `;\n  }\n}\n\nfunction parseAIResponse(content: string, language: 'zh' | 'en'): AIAnalysisResult {\n  // \u7B80\u5316\u5904\u7406\uFF0C\u5B9E\u9645\u5E94\u7528\u4E2D\u53EF\u80FD\u9700\u8981\u66F4\u590D\u6742\u7684\u89E3\u6790\u903B\u8F91\n  return {\n    analysis: content,\n    aspects: ['personality', 'career', 'relationships', 'health', 'wealth'],\n    suggestions: language === 'en' \n      ? ['Meditate regularly', 'Balance your elements', 'Follow your lucky directions']\n      : ['\u5B9A\u671F\u51A5\u60F3', '\u5E73\u8861\u4E94\u884C', '\u9075\u5FAA\u5409\u7965\u65B9\u5411'],\n    luckyPeriods: language === 'en'\n      ? ['2025-2026', '2030-2031']\n      : ['2025-2026\u5E74', '2030-2031\u5E74'],\n    warnings: language === 'en'\n      ? ['Avoid risky investments in 2024', 'Pay attention to health in autumn']\n      : ['2024\u5E74\u907F\u514D\u98CE\u9669\u6295\u8D44', '\u79CB\u5B63\u6CE8\u610F\u5065\u5EB7']\n  };\n}", "import { Hono } from 'hono';\nimport { PrismaClient } from '@prisma/client/edge';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { Env } from '../lib/auth';\n\nexport const orderRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n  \n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// \u521B\u5EFA\u8BA2\u5355\norderRoutes.post('/create', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { type, amount } = await c.req.json();\n    \n    if (!type || !amount) {\n      return c.json({ error: 'Missing required fields' }, 400);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u521B\u5EFA\u8BA2\u5355\n    const order = await prisma.order.create({\n      data: {\n        userId,\n        type,\n        amount,\n        status: 'PENDING',\n      },\n    });\n    \n    return c.json({\n      id: order.id,\n      type: order.type,\n      amount: order.amount,\n      status: order.status,\n      createdAt: order.createdAt,\n    });\n  } catch (error) {\n    console.error('Create order error:', error);\n    return c.json({ error: 'Failed to create order' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u8BA2\u5355\u5217\u8868\norderRoutes.get('/list', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n    const status = c.req.query('status');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const whereClause: any = { userId };\n    if (status) {\n      whereClause.status = status;\n    }\n    \n    const [orders, total] = await Promise.all([\n      prisma.order.findMany({\n        where: whereClause,\n        orderBy: { createdAt: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit,\n      }),\n      prisma.order.count({ where: whereClause }),\n    ]);\n    \n    return c.json({\n      data: orders,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error('Get orders error:', error);\n    return c.json({ error: 'Failed to get orders' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u8BA2\u5355\u8BE6\u60C5\norderRoutes.get('/:id', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const orderId = c.req.param('id');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const order = await prisma.order.findFirst({\n      where: {\n        id: orderId,\n        userId, // \u786E\u4FDD\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u81EA\u5DF1\u7684\u8BA2\u5355\n      },\n    });\n    \n    if (!order) {\n      return c.json({ error: 'Order not found' }, 404);\n    }\n    \n    return c.json(order);\n  } catch (error) {\n    console.error('Get order detail error:', error);\n    return c.json({ error: 'Failed to get order detail' }, 500);\n  }\n});\n\n// \u66F4\u65B0\u8BA2\u5355\u72B6\u6001\uFF08\u7BA1\u7406\u5458\u6216\u652F\u4ED8\u56DE\u8C03\uFF09\norderRoutes.put('/:id/status', authMiddleware, async (c) => {\n  try {\n    const userRole = c.get('userRole');\n    const orderId = c.req.param('id');\n    const { status } = await c.req.json();\n    \n    if (!status) {\n      return c.json({ error: 'Missing status' }, 400);\n    }\n    \n    // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u65B0\u8BA2\u5355\u72B6\u6001\uFF0C\u6216\u8005\u8FD9\u662F\u652F\u4ED8\u56DE\u8C03\n    if (userRole !== 'ADMIN' && c.req.header('X-Payment-Callback') !== 'true') {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u8BA2\u5355\u662F\u5426\u5B58\u5728\n    const existingOrder = await prisma.order.findUnique({\n      where: { id: orderId },\n    });\n    \n    if (!existingOrder) {\n      return c.json({ error: 'Order not found' }, 404);\n    }\n    \n    // \u66F4\u65B0\u8BA2\u5355\u72B6\u6001\n    const updatedOrder = await prisma.order.update({\n      where: { id: orderId },\n      data: { status },\n    });\n    \n    return c.json(updatedOrder);\n  } catch (error) {\n    console.error('Update order status error:', error);\n    return c.json({ error: 'Failed to update order status' }, 500);\n  }\n});\n\n// \u5220\u9664\u8BA2\u5355\uFF08\u7BA1\u7406\u5458\uFF09\norderRoutes.delete('/:id', authMiddleware, async (c) => {\n  try {\n    const userRole = c.get('userRole');\n    const orderId = c.req.param('id');\n    \n    if (userRole !== 'ADMIN') {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u8BA2\u5355\u662F\u5426\u5B58\u5728\n    const existingOrder = await prisma.order.findUnique({\n      where: { id: orderId },\n    });\n    \n    if (!existingOrder) {\n      return c.json({ error: 'Order not found' }, 404);\n    }\n    \n    // \u5220\u9664\u8BA2\u5355\n    await prisma.order.delete({\n      where: { id: orderId },\n    });\n    \n    return c.json({ message: 'Order deleted successfully' });\n  } catch (error) {\n    console.error('Delete order error:', error);\n    return c.json({ error: 'Failed to delete order' }, 500);\n  }\n});", "import { Hono } from 'hono';\nimport { PrismaClient } from '@prisma/client/edge';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { Env } from '../lib/auth';\n\nexport const masterRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n  \n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// \u83B7\u53D6\u5927\u5E08\u5217\u8868\nmasterRoutes.get('/list', async (c) => {\n  try {\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n    const available = c.req.query('available');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const whereClause: any = {};\n    if (available !== undefined) {\n      whereClause.available = available === 'true';\n    }\n    \n    const [masters, total] = await Promise.all([\n      prisma.master.findMany({\n        where: whereClause,\n        include: {\n          user: {\n            select: {\n              username: true,\n            },\n          },\n        },\n        orderBy: { rating: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit,\n      }),\n      prisma.master.count({ where: whereClause }),\n    ]);\n    \n    return c.json({\n      data: masters,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error('Get masters error:', error);\n    return c.json({ error: 'Failed to get masters' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u5927\u5E08\u8BE6\u60C5\nmasterRoutes.get('/:id', async (c) => {\n  try {\n    const masterId = c.req.param('id');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const master = await prisma.master.findUnique({\n      where: { id: masterId },\n      include: {\n        user: {\n          select: {\n            username: true,\n          },\n        },\n      },\n    });\n    \n    if (!master) {\n      return c.json({ error: 'Master not found' }, 404);\n    }\n    \n    return c.json(master);\n  } catch (error) {\n    console.error('Get master detail error:', error);\n    return c.json({ error: 'Failed to get master detail' }, 500);\n  }\n});\n\n// \u7533\u8BF7\u6210\u4E3A\u5927\u5E08\nmasterRoutes.post('/apply', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { title, description, price } = await c.req.json();\n    \n    if (!title || !price) {\n      return c.json({ error: 'Missing required fields' }, 400);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u7528\u6237\u662F\u5426\u5DF2\u7ECF\u662F\u5927\u5E08\n    const existingMaster = await prisma.master.findUnique({\n      where: { userId },\n    });\n    \n    if (existingMaster) {\n      return c.json({ error: 'User is already a master' }, 409);\n    }\n    \n    // \u521B\u5EFA\u5927\u5E08\u8BB0\u5F55\n    const master = await prisma.master.create({\n      data: {\n        userId,\n        title,\n        description,\n        price,\n        available: false, // \u9ED8\u8BA4\u4E0D\u53EF\u7528\uFF0C\u9700\u8981\u7BA1\u7406\u5458\u5BA1\u6838\n      },\n    });\n    \n    return c.json({\n      id: master.id,\n      title: master.title,\n      description: master.description,\n      price: master.price,\n      available: master.available,\n      createdAt: master.createdAt,\n    });\n  } catch (error) {\n    console.error('Apply to be master error:', error);\n    return c.json({ error: 'Failed to apply to be master' }, 500);\n  }\n});\n\n// \u66F4\u65B0\u5927\u5E08\u4FE1\u606F\nmasterRoutes.put('/:id', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const userRole = c.get('userRole');\n    const masterId = c.req.param('id');\n    const { title, description, price, available } = await c.req.json();\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u5927\u5E08\u662F\u5426\u5B58\u5728\n    const existingMaster = await prisma.master.findUnique({\n      where: { id: masterId },\n    });\n    \n    if (!existingMaster) {\n      return c.json({ error: 'Master not found' }, 404);\n    }\n    \n    // \u53EA\u6709\u5927\u5E08\u672C\u4EBA\u6216\u7BA1\u7406\u5458\u53EF\u4EE5\u66F4\u65B0\u4FE1\u606F\n    if (existingMaster.userId !== userId && userRole !== 'ADMIN') {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n    \n    // \u53EA\u6709\u7BA1\u7406\u5458\u53EF\u4EE5\u8BBE\u7F6E\u53EF\u7528\u6027\n    const updateData: any = {};\n    if (title) updateData.title = title;\n    if (description !== undefined) updateData.description = description;\n    if (price) updateData.price = price;\n    if (userRole === 'ADMIN' && available !== undefined) updateData.available = available;\n    \n    // \u66F4\u65B0\u5927\u5E08\u4FE1\u606F\n    const updatedMaster = await prisma.master.update({\n      where: { id: masterId },\n      data: updateData,\n    });\n    \n    return c.json(updatedMaster);\n  } catch (error) {\n    console.error('Update master error:', error);\n    return c.json({ error: 'Failed to update master' }, 500);\n  }\n});\n\n// \u5220\u9664\u5927\u5E08\uFF08\u7BA1\u7406\u5458\uFF09\nmasterRoutes.delete('/:id', authMiddleware, async (c) => {\n  try {\n    const userRole = c.get('userRole');\n    const masterId = c.req.param('id');\n    \n    if (userRole !== 'ADMIN') {\n      return c.json({ error: 'Unauthorized' }, 403);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u5927\u5E08\u662F\u5426\u5B58\u5728\n    const existingMaster = await prisma.master.findUnique({\n      where: { id: masterId },\n    });\n    \n    if (!existingMaster) {\n      return c.json({ error: 'Master not found' }, 404);\n    }\n    \n    // \u5220\u9664\u5927\u5E08\n    await prisma.master.delete({\n      where: { id: masterId },\n    });\n    \n    return c.json({ message: 'Master deleted successfully' });\n  } catch (error) {\n    console.error('Delete master error:', error);\n    return c.json({ error: 'Failed to delete master' }, 500);\n  }\n});", "import { Hono } from 'hono';\nimport { PrismaClient } from '@prisma/client/edge';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { Env } from '../lib/auth';\n\nexport const chatRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n  \n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// \u521B\u5EFA\u804A\u5929\nchatRoutes.post('/create', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { masterId, initialMessage } = await c.req.json();\n    \n    if (!masterId) {\n      return c.json({ error: 'Missing masterId' }, 400);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u5927\u5E08\u662F\u5426\u5B58\u5728\u4E14\u53EF\u7528\n    const master = await prisma.master.findUnique({\n      where: { id: masterId },\n    });\n    \n    if (!master) {\n      return c.json({ error: 'Master not found' }, 404);\n    }\n    \n    if (!master.available) {\n      return c.json({ error: 'Master is not available' }, 400);\n    }\n    \n    // \u521B\u5EFA\u804A\u5929\n    const messages = initialMessage ? [initialMessage] : [];\n    const chat = await prisma.chat.create({\n      data: {\n        userId,\n        masterId,\n        messages,\n        status: 'active',\n      },\n    });\n    \n    return c.json({\n      id: chat.id,\n      masterId: chat.masterId,\n      messages: chat.messages,\n      status: chat.status,\n      createdAt: chat.createdAt,\n    });\n  } catch (error) {\n    console.error('Create chat error:', error);\n    return c.json({ error: 'Failed to create chat' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u7684\u804A\u5929\u5217\u8868\nchatRoutes.get('/list', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n    const status = c.req.query('status');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const whereClause: any = { userId };\n    if (status) {\n      whereClause.status = status;\n    }\n    \n    const [chats, total] = await Promise.all([\n      prisma.chat.findMany({\n        where: whereClause,\n        include: {\n          master: {\n            include: {\n              user: {\n                select: {\n                  username: true,\n                },\n              },\n            },\n          },\n        },\n        orderBy: { createdAt: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit,\n      }),\n      prisma.chat.count({ where: whereClause }),\n    ]);\n    \n    return c.json({\n      data: chats,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error('Get chats error:', error);\n    return c.json({ error: 'Failed to get chats' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u804A\u5929\u8BE6\u60C5\nchatRoutes.get('/:id', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const chatId = c.req.param('id');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    const chat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        userId, // \u786E\u4FDD\u7528\u6237\u53EA\u80FD\u8BBF\u95EE\u81EA\u5DF1\u7684\u804A\u5929\n      },\n      include: {\n        master: {\n          include: {\n            user: {\n              select: {\n                username: true,\n              },\n            },\n          },\n        },\n      },\n    });\n    \n    if (!chat) {\n      return c.json({ error: 'Chat not found' }, 404);\n    }\n    \n    return c.json(chat);\n  } catch (error) {\n    console.error('Get chat detail error:', error);\n    return c.json({ error: 'Failed to get chat detail' }, 500);\n  }\n});\n\n// \u53D1\u9001\u6D88\u606F\nchatRoutes.post('/:id/message', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const chatId = c.req.param('id');\n    const { message } = await c.req.json();\n    \n    if (!message) {\n      return c.json({ error: 'Missing message' }, 400);\n    }\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u804A\u5929\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingChat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        userId,\n      },\n    });\n    \n    if (!existingChat) {\n      return c.json({ error: 'Chat not found' }, 404);\n    }\n    \n    if (existingChat.status !== 'active') {\n      return c.json({ error: 'Chat is not active' }, 400);\n    }\n    \n    // \u6DFB\u52A0\u6D88\u606F\n    const updatedMessages = [...(existingChat.messages as any[]), message];\n    \n    // \u66F4\u65B0\u804A\u5929\n    const updatedChat = await prisma.chat.update({\n      where: { id: chatId },\n      data: {\n        messages: updatedMessages,\n      },\n    });\n    \n    return c.json({\n      id: updatedChat.id,\n      messages: updatedMessages,\n      status: updatedChat.status,\n      updatedAt: updatedChat.createdAt,\n    });\n  } catch (error) {\n    console.error('Send message error:', error);\n    return c.json({ error: 'Failed to send message' }, 500);\n  }\n});\n\n// \u5173\u95ED\u804A\u5929\nchatRoutes.put('/:id/close', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const chatId = c.req.param('id');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u804A\u5929\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingChat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        userId,\n      },\n    });\n    \n    if (!existingChat) {\n      return c.json({ error: 'Chat not found' }, 404);\n    }\n    \n    // \u5173\u95ED\u804A\u5929\n    const updatedChat = await prisma.chat.update({\n      where: { id: chatId },\n      data: {\n        status: 'closed',\n      },\n    });\n    \n    return c.json({\n      id: updatedChat.id,\n      status: updatedChat.status,\n    });\n  } catch (error) {\n    console.error('Close chat error:', error);\n    return c.json({ error: 'Failed to close chat' }, 500);\n  }\n});\n\n// \u5220\u9664\u804A\u5929\nchatRoutes.delete('/:id', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const chatId = c.req.param('id');\n    \n    const prisma = getPrismaClient(c.env);\n    \n    // \u68C0\u67E5\u804A\u5929\u662F\u5426\u5B58\u5728\u4E14\u5C5E\u4E8E\u5F53\u524D\u7528\u6237\n    const existingChat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        userId,\n      },\n    });\n    \n    if (!existingChat) {\n      return c.json({ error: 'Chat not found' }, 404);\n    }\n    \n    // \u5220\u9664\u804A\u5929\n    await prisma.chat.delete({\n      where: { id: chatId },\n    });\n    \n    return c.json({ message: 'Chat deleted successfully' });\n  } catch (error) {\n    console.error('Delete chat error:', error);\n    return c.json({ error: 'Failed to delete chat' }, 500);\n  }\n});", "import { Hono } from 'hono';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { Env } from '../lib/auth';\n\nexport const paymentsRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n\n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// \u521B\u5EFA\u652F\u4ED8\u8BA2\u5355\npaymentsRoutes.post('/create-order', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { type, amount, description, masterId } = await c.req.json();\n\n    if (!type || !amount) {\n      return c.json({ error: 'Missing required fields' }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u521B\u5EFA\u8BA2\u5355\u8BB0\u5F55\n    const order = await prisma.order.create({\n      data: {\n        userId,\n        type,\n        amount,\n        status: 'PENDING',\n      },\n    });\n\n    // \u6839\u636E\u652F\u4ED8\u65B9\u5F0F\u521B\u5EFA\u652F\u4ED8\u94FE\u63A5\n    const paymentMethod = c.req.query('method') || 'stripe';\n\n    if (paymentMethod === 'stripe') {\n      const paymentIntent = await createStripePaymentIntent(amount, order.id, c.env.STRIPE_SECRET_KEY);\n      return c.json({\n        orderId: order.id,\n        clientSecret: paymentIntent.client_secret,\n        paymentMethod: 'stripe'\n      });\n    } else if (paymentMethod === 'alipay') {\n      const paymentUrl = await createAlipayPayment(amount, order.id, description, c.env.ALIPAY_APP_ID, c.env.ALIPAY_PRIVATE_KEY);\n      return c.json({\n        orderId: order.id,\n        paymentUrl,\n        paymentMethod: 'alipay'\n      });\n    }\n\n    return c.json({ error: 'Unsupported payment method' }, 400);\n  } catch (error) {\n    console.error('Create payment order error:', error);\n    return c.json({ error: 'Failed to create payment order' }, 500);\n  }\n});\n\n// \u786E\u8BA4\u652F\u4ED8\uFF08Webhook\uFF09\npaymentsRoutes.post('/webhook/stripe', async (c) => {\n  try {\n    const signature = c.req.header('stripe-signature');\n    if (!signature) {\n      return c.json({ error: 'Missing signature' }, 400);\n    }\n\n    const body = await c.req.text();\n    const event = await verifyStripeWebhook(body, signature, c.env.STRIPE_WEBHOOK_SECRET);\n\n    const prisma = getPrismaClient(c.env);\n\n    switch (event.type) {\n      case 'payment_intent.succeeded':\n        const paymentIntent = event.data.object as any;\n        await updateOrderStatus(prisma, paymentIntent.metadata.orderId, 'COMPLETED');\n        break;\n      case 'payment_intent.payment_failed':\n        const failedPayment = event.data.object as any;\n        await updateOrderStatus(prisma, failedPayment.metadata.orderId, 'CANCELLED');\n        break;\n    }\n\n    return c.json({ received: true });\n  } catch (error) {\n    console.error('Stripe webhook error:', error);\n    return c.json({ error: 'Webhook processing failed' }, 500);\n  }\n});\n\n// \u652F\u4ED8\u5B9D\u56DE\u8C03\npaymentsRoutes.post('/webhook/alipay', async (c) => {\n  try {\n    const formData = await c.req.formData();\n    const verified = await verifyAlipayNotification(formData, c.env.ALIPAY_PUBLIC_KEY);\n\n    if (!verified) {\n      return c.json({ error: 'Invalid signature' }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n    const orderId = formData.get('out_trade_no') as string;\n    const tradeStatus = formData.get('trade_status') as string;\n\n    if (tradeStatus === 'TRADE_SUCCESS' || tradeStatus === 'TRADE_FINISHED') {\n      await updateOrderStatus(prisma, orderId, 'COMPLETED');\n    }\n\n    return c.json({ success: true });\n  } catch (error) {\n    console.error('Alipay webhook error:', error);\n    return c.json({ error: 'Webhook processing failed' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u652F\u4ED8\u72B6\u6001\npaymentsRoutes.get('/status/:orderId', authMiddleware, async (c) => {\n  try {\n    const orderId = c.req.param('orderId');\n    const userId = c.get('userId');\n\n    const prisma = getPrismaClient(c.env);\n\n    const order = await prisma.order.findFirst({\n      where: {\n        id: orderId,\n        userId, // \u786E\u4FDD\u7528\u6237\u53EA\u80FD\u67E5\u770B\u81EA\u5DF1\u7684\u8BA2\u5355\n      },\n    });\n\n    if (!order) {\n      return c.json({ error: 'Order not found' }, 404);\n    }\n\n    return c.json({\n      orderId: order.id,\n      status: order.status,\n      amount: order.amount,\n      type: order.type,\n      createdAt: order.createdAt,\n    });\n  } catch (error) {\n    console.error('Get payment status error:', error);\n    return c.json({ error: 'Failed to get payment status' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u652F\u4ED8\u5386\u53F2\npaymentsRoutes.get('/history', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const page = parseInt(c.req.query('page') || '1');\n    const limit = parseInt(c.req.query('limit') || '10');\n\n    const prisma = getPrismaClient(c.env);\n\n    const [orders, total] = await Promise.all([\n      prisma.order.findMany({\n        where: { userId },\n        orderBy: { createdAt: 'desc' },\n        skip: (page - 1) * limit,\n        take: limit,\n      }),\n      prisma.order.count({ where: { userId } }),\n    ]);\n\n    return c.json({\n      data: orders,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit),\n      },\n    });\n  } catch (error) {\n    console.error('Get payment history error:', error);\n    return c.json({ error: 'Failed to get payment history' }, 500);\n  }\n});\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u521B\u5EFAStripe\u652F\u4ED8\u610F\u56FE\nasync function createStripePaymentIntent(amount: number, orderId: string, secretKey: string) {\n  const response = await fetch('https://api.stripe.com/v1/payment_intents', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${secretKey}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      amount: Math.round(amount * 100), // Stripe\u4F7F\u7528\u5206\u4E3A\u5355\u4F4D\n      currency: 'usd',\n      metadata: { orderId },\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to create Stripe payment intent');\n  }\n\n  return response.json();\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u521B\u5EFA\u652F\u4ED8\u5B9D\u652F\u4ED8\nasync function createAlipayPayment(amount: number, orderId: string, description: string, appId: string, privateKey: string) {\n  // \u8FD9\u91CC\u9700\u8981\u96C6\u6210\u652F\u4ED8\u5B9DSDK\uFF0C\u7B80\u5316\u793A\u4F8B\n  const params = {\n    app_id: appId,\n    method: 'alipay.trade.page.pay',\n    charset: 'utf-8',\n    sign_type: 'RSA2',\n    timestamp: new Date().toISOString(),\n    version: '1.0',\n    notify_url: `${c.env.API_URL}/api/v1/payments/webhook/alipay`,\n    return_url: `${c.env.FRONTEND_URL}/payment/success`,\n    biz_content: JSON.stringify({\n      out_trade_no: orderId,\n      total_amount: amount.toString(),\n      subject: description || '\u516B\u5B57\u7B97\u547D\u670D\u52A1',\n      product_code: 'FAST_INSTANT_TRADE_PAY',\n    }),\n  };\n\n  // \u751F\u6210\u7B7E\u540D\uFF08\u7B80\u5316\u793A\u4F8B\uFF09\n  const sign = await generateAlipaySignature(params, privateKey);\n  params['sign'] = sign;\n\n  // \u751F\u6210\u652F\u4ED8URL\n  const queryString = new URLSearchParams(params).toString();\n  return `https://openapi.alipay.com/gateway.do?${queryString}`;\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u9A8C\u8BC1Stripe Webhook\nasync function verifyStripeWebhook(body: string, signature: string, webhookSecret: string) {\n  // \u8FD9\u91CC\u9700\u8981\u4F7F\u7528Stripe SDK\u9A8C\u8BC1webhook\u7B7E\u540D\n  // \u7B80\u5316\u793A\u4F8B\uFF0C\u5B9E\u9645\u751F\u4EA7\u73AF\u5883\u9700\u8981\u6B63\u786E\u5B9E\u73B0\n  try {\n    const crypto = require('crypto');\n    const elements = signature.split(',');\n    const timestamp = elements.find((e: string) => e.startsWith('t='))?.substring(2);\n    const signedPayload = `${timestamp}.${body}`;\n    const expectedSignature = crypto\n      .createHmac('sha256', webhookSecret)\n      .update(signedPayload, 'utf8')\n      .digest('hex');\n\n    const receivedSignature = elements.find((e: string) => e.startsWith('v1='))?.substring(3);\n\n    return crypto.timingSafeEqual(\n      Buffer.from(expectedSignature),\n      Buffer.from(receivedSignature || '')\n    );\n  } catch (error) {\n    return false;\n  }\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u9A8C\u8BC1\u652F\u4ED8\u5B9D\u901A\u77E5\nasync function verifyAlipayNotification(formData: FormData, publicKey: string) {\n  // \u8FD9\u91CC\u9700\u8981\u96C6\u6210\u652F\u4ED8\u5B9DSDK\u9A8C\u8BC1\u901A\u77E5\u7B7E\u540D\n  // \u7B80\u5316\u793A\u4F8B\uFF0C\u5B9E\u9645\u751F\u4EA7\u73AF\u5883\u9700\u8981\u6B63\u786E\u5B9E\u73B0\n  return true; // \u4E34\u65F6\u8FD4\u56DEtrue\uFF0C\u5B9E\u9645\u9700\u8981\u9A8C\u8BC1\u7B7E\u540D\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u66F4\u65B0\u8BA2\u5355\u72B6\u6001\nasync function updateOrderStatus(prisma: any, orderId: string, status: string) {\n  return prisma.order.update({\n    where: { id: orderId },\n    data: { status },\n  });\n}\n\n// \u8F85\u52A9\u51FD\u6570\uFF1A\u751F\u6210\u652F\u4ED8\u5B9D\u7B7E\u540D\nasync function generateAlipaySignature(params: any, privateKey: string) {\n  // \u8FD9\u91CC\u9700\u8981\u96C6\u6210\u652F\u4ED8\u5B9DSDK\u751F\u6210\u7B7E\u540D\n  // \u7B80\u5316\u793A\u4F8B\uFF0C\u5B9E\u9645\u751F\u4EA7\u73AF\u5883\u9700\u8981\u6B63\u786E\u5B9E\u73B0\n  return 'generated_signature';\n}\n", "import { Hono } from 'hono';\nimport { verifyJWT } from '../lib/auth';\nimport { getPrismaClient } from '../lib/db';\nimport { Env } from '../lib/auth';\n\nexport const usersRoutes = new Hono<{ Bindings: Env }>();\n\n// \u8BA4\u8BC1\u4E2D\u95F4\u4EF6\nasync function authMiddleware(c: any, next: any) {\n  const authorization = c.req.header('Authorization');\n  if (!authorization || !authorization.startsWith('Bearer ')) {\n    return c.json({ error: 'Missing or invalid token' }, 401);\n  }\n\n  try {\n    const token = authorization.substring(7);\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    c.set('userId', payload.userId);\n    c.set('userRole', payload.role);\n    await next();\n  } catch (error) {\n    return c.json({ error: 'Invalid token' }, 401);\n  }\n}\n\n// \u83B7\u53D6\u7528\u6237\u8BE6\u7EC6\u4FE1\u606F\nusersRoutes.get('/profile', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const prisma = getPrismaClient(c.env);\n\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        role: true,\n        createdAt: true,\n        master: {\n          select: {\n            id: true,\n            title: true,\n            description: true,\n            price: true,\n            rating: true,\n            available: true,\n          },\n        },\n      },\n    });\n\n    if (!user) {\n      return c.json({ error: 'User not found' }, 404);\n    }\n\n    return c.json({ user });\n  } catch (error) {\n    console.error('Get user profile error:', error);\n    return c.json({ error: 'Failed to get user profile' }, 500);\n  }\n});\n\n// \u66F4\u65B0\u7528\u6237\u57FA\u672C\u4FE1\u606F\nusersRoutes.put('/profile', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { username, email } = await c.req.json();\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u68C0\u67E5\u90AE\u7BB1\u662F\u5426\u5DF2\u88AB\u5176\u4ED6\u7528\u6237\u4F7F\u7528\n    if (email) {\n      const existingUser = await prisma.user.findFirst({\n        where: {\n          email,\n          id: { not: userId },\n        },\n      });\n\n      if (existingUser) {\n        return c.json({ error: 'Email already in use' }, 409);\n      }\n    }\n\n    // \u68C0\u67E5\u7528\u6237\u540D\u662F\u5426\u5DF2\u88AB\u5176\u4ED6\u7528\u6237\u4F7F\u7528\n    if (username) {\n      const existingUser = await prisma.user.findFirst({\n        where: {\n          username,\n          id: { not: userId },\n        },\n      });\n\n      if (existingUser) {\n        return c.json({ error: 'Username already in use' }, 409);\n      }\n    }\n\n    const updatedUser = await prisma.user.update({\n      where: { id: userId },\n      data: {\n        ...(username && { username }),\n        ...(email && { email }),\n      },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        role: true,\n        createdAt: true,\n      },\n    });\n\n    return c.json({ user: updatedUser });\n  } catch (error) {\n    console.error('Update user profile error:', error);\n    return c.json({ error: 'Failed to update user profile' }, 500);\n  }\n});\n\n// \u4E0A\u4F20\u5934\u50CF\nusersRoutes.post('/avatar', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const formData = await c.req.formData();\n    const file = formData.get('avatar') as File;\n\n    if (!file) {\n      return c.json({ error: 'No file provided' }, 400);\n    }\n\n    // \u9A8C\u8BC1\u6587\u4EF6\u7C7B\u578B\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];\n    if (!allowedTypes.includes(file.type)) {\n      return c.json({ error: 'Invalid file type. Only JPEG, PNG, and WebP are allowed' }, 400);\n    }\n\n    // \u9A8C\u8BC1\u6587\u4EF6\u5927\u5C0F (\u6700\u59275MB)\n    const maxSize = 5 * 1024 * 1024;\n    if (file.size > maxSize) {\n      return c.json({ error: 'File too large. Maximum size is 5MB' }, 400);\n    }\n\n    // \u8BFB\u53D6\u6587\u4EF6\u5185\u5BB9\n    const arrayBuffer = await file.arrayBuffer();\n    const uint8Array = new Uint8Array(arrayBuffer);\n\n    // \u751F\u6210\u552F\u4E00\u6587\u4EF6\u540D\n    const timestamp = Date.now();\n    const extension = file.type.split('/')[1];\n    const fileName = `avatars/${userId}_${timestamp}.${extension}`;\n\n    // \u4E0A\u4F20\u5230Cloudflare R2\uFF08\u9700\u8981\u914D\u7F6E\uFF09\n    const url = await uploadToR2(uint8Array, fileName, file.type, c.env);\n\n    // \u66F4\u65B0\u7528\u6237\u5934\u50CFURL\n    const prisma = getPrismaClient(c.env);\n    await prisma.user.update({\n      where: { id: userId },\n      data: { avatarUrl: url },\n    });\n\n    return c.json({\n      message: 'Avatar uploaded successfully',\n      avatarUrl: url,\n    });\n  } catch (error) {\n    console.error('Upload avatar error:', error);\n    return c.json({ error: 'Failed to upload avatar' }, 500);\n  }\n});\n\n// \u4FEE\u6539\u5BC6\u7801\nusersRoutes.put('/password', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { currentPassword, newPassword } = await c.req.json();\n\n    if (!currentPassword || !newPassword) {\n      return c.json({ error: 'Missing required fields' }, 400);\n    }\n\n    // \u9A8C\u8BC1\u65B0\u5BC6\u7801\u5F3A\u5EA6\n    if (newPassword.length < 8) {\n      return c.json({ error: 'Password must be at least 8 characters long' }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u83B7\u53D6\u7528\u6237\u5F53\u524D\u5BC6\u7801\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: { password: true },\n    });\n\n    if (!user) {\n      return c.json({ error: 'User not found' }, 404);\n    }\n\n    // \u9A8C\u8BC1\u5F53\u524D\u5BC6\u7801\n    const isValidPassword = await verifyPassword(currentPassword, user.password);\n    if (!isValidPassword) {\n      return c.json({ error: 'Current password is incorrect' }, 401);\n    }\n\n    // \u54C8\u5E0C\u65B0\u5BC6\u7801\n    const hashedPassword = await hashPassword(newPassword);\n\n    // \u66F4\u65B0\u5BC6\u7801\n    await prisma.user.update({\n      where: { id: userId },\n      data: { password: hashedPassword },\n    });\n\n    return c.json({ message: 'Password updated successfully' });\n  } catch (error) {\n    console.error('Update password error:', error);\n    return c.json({ error: 'Failed to update password' }, 500);\n  }\n});\n\n// \u5220\u9664\u8D26\u6237\nusersRoutes.delete('/account', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const { password } = await c.req.json();\n\n    if (!password) {\n      return c.json({ error: 'Password is required to delete account' }, 400);\n    }\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u83B7\u53D6\u7528\u6237\u4FE1\u606F\u9A8C\u8BC1\u5BC6\u7801\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: { password: true },\n    });\n\n    if (!user) {\n      return c.json({ error: 'User not found' }, 404);\n    }\n\n    // \u9A8C\u8BC1\u5BC6\u7801\n    const isValidPassword = await verifyPassword(password, user.password);\n    if (!isValidPassword) {\n      return c.json({ error: 'Invalid password' }, 401);\n    }\n\n    // \u5220\u9664\u7528\u6237\u76F8\u5173\u7684\u6240\u6709\u6570\u636E\uFF08\u7EA7\u8054\u5220\u9664\uFF09\n    await prisma.user.delete({\n      where: { id: userId },\n    });\n\n    return c.json({ message: 'Account deleted successfully' });\n  } catch (error) {\n    console.error('Delete account error:', error);\n    return c.json({ error: 'Failed to delete account' }, 500);\n  }\n});\n\n// \u83B7\u53D6\u7528\u6237\u7EDF\u8BA1\u4FE1\u606F\nusersRoutes.get('/stats', authMiddleware, async (c) => {\n  try {\n    const userId = c.get('userId');\n    const prisma = getPrismaClient(c.env);\n\n    const [baziCount, orderCount, totalSpent] = await Promise.all([\n      prisma.baziData.count({\n        where: { userId },\n      }),\n      prisma.order.count({\n        where: { userId },\n      }),\n      prisma.order.aggregate({\n        where: {\n          userId,\n          status: 'COMPLETED',\n        },\n        _sum: { amount: true },\n      }),\n    ]);\n\n    return c.json({\n      baziCalculations: baziCount,\n      totalOrders: orderCount,\n      totalSpent: totalSpent._sum.amount || '0',\n    });\n  } catch (error) {\n    console.error('Get user stats error:', error);\n    return c.json({ error: 'Failed to get user stats' }, 500);\n  }\n});\n\n// \u4E0A\u4F20\u5230Cloudflare R2\u7684\u8F85\u52A9\u51FD\u6570\nasync function uploadToR2(data: Uint8Array, fileName: string, contentType: string, env: any): Promise<string> {\n  // \u9700\u8981\u5728wrangler.toml\u4E2D\u914D\u7F6ER2 bucket\n  const bucket = env.AVATAR_BUCKET; // \u914D\u7F6ER2 bucket\u7ED1\u5B9A\n\n  // \u4E0A\u4F20\u6587\u4EF6\u5230R2\n  await bucket.put(fileName, data, {\n    httpMetadata: {\n      contentType,\n    },\n  });\n\n  // \u8FD4\u56DE\u516C\u5171URL\n  return `https://pub-${env.R2_ACCOUNT_ID}.r2.dev/${fileName}`;\n}\n\n// \u5BC6\u7801\u54C8\u5E0C\u51FD\u6570\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode('pepper'),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n\n  const saltedPassword = new Uint8Array(salt.length + data.length);\n  saltedPassword.set(salt);\n  saltedPassword.set(data, salt.length);\n\n  const signature = await crypto.subtle.sign('HMAC', key, saltedPassword);\n\n  const combined = new Uint8Array(salt.length + signature.byteLength);\n  combined.set(salt);\n  combined.set(new Uint8Array(signature), salt.length);\n\n  return btoa(String.fromCharCode(...combined));\n}\n\n// \u5BC6\u7801\u9A8C\u8BC1\u51FD\u6570\nasync function verifyPassword(password: string, hashedPassword: string): Promise<boolean> {\n  try {\n    const encoder = new TextEncoder();\n    const combined = new Uint8Array(\n      ...atob(hashedPassword).split('').map(char => char.charCodeAt(0))\n    );\n\n    const salt = combined.slice(0, 16);\n    const storedHash = combined.slice(16);\n\n    const data = encoder.encode(password);\n    const saltedPassword = new Uint8Array(salt.length + data.length);\n    saltedPassword.set(salt);\n    saltedPassword.set(data, salt.length);\n\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode('pepper'),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['sign']\n    );\n\n    const signature = await crypto.subtle.sign('HMAC', key, saltedPassword);\n\n    if (signature.byteLength !== storedHash.length) {\n      return false;\n    }\n\n    const signatureArray = new Uint8Array(signature);\n    for (let i = 0; i < signature.byteLength; i++) {\n      if (signatureArray[i] !== storedHash[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Password verification error:', error);\n    return false;\n  }\n}\n", "import { Hono } from \"hono\";\nimport { verifyJWT } from \"../lib/auth\";\nimport { getPrismaClient } from \"../lib/db\";\nimport { Env } from \"../lib/auth\";\n\ninterface WebSocketMessage {\n  type: \"message\" | \"typing\" | \"online_status\" | \"read_receipt\";\n  data: any;\n  timestamp: number;\n  userId: string;\n  chatId: string;\n}\n\ninterface ConnectedClient {\n  userId: string;\n  socket: WebSocket;\n  chatIds: Set<string>;\n  lastSeen: number;\n}\n\nexport const websocketRoutes = new Hono<{ Bindings: Env }>();\n\n// \u5B58\u50A8\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\uFF08\u751F\u4EA7\u73AF\u5883\u5E94\u4F7F\u7528Durable Objects\uFF09\nconst connectedClients = new Map<string, ConnectedClient>();\n\n// WebSocket\u8FDE\u63A5\u5904\u7406\nwebsocketRoutes.get(\"/ws\", async (c) => {\n  const upgradeHeader = c.req.header(\"Upgrade\");\n  if (upgradeHeader !== \"websocket\") {\n    return c.text(\"Expected websocket\", 400);\n  }\n\n  // \u9A8C\u8BC1JWT token\n  const token = c.req.query(\"token\");\n  if (!token) {\n    return c.text(\"Missing token\", 401);\n  }\n\n  try {\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    const userId = payload.userId;\n\n    // \u521B\u5EFAWebSocket\u8FDE\u63A5\n    const webSocketPair = new WebSocketPair();\n    const [client, server] = Object.values(webSocketPair);\n\n    // \u6DFB\u52A0\u5230\u8FDE\u63A5\u6C60\n    const clientInfo: ConnectedClient = {\n      userId,\n      socket: client,\n      chatIds: new Set(),\n      lastSeen: Date.now(),\n    };\n\n    connectedClients.set(userId, clientInfo);\n\n    // \u8BBE\u7F6EWebSocket\u4E8B\u4EF6\u5904\u7406\n    server.accept();\n\n    // \u53D1\u9001\u8FDE\u63A5\u6210\u529F\u6D88\u606F\n    server.send(\n      JSON.stringify({\n        type: \"connection\",\n        data: { status: \"connected\", userId },\n        timestamp: Date.now(),\n      }),\n    );\n\n    // \u5904\u7406\u6D88\u606F\n    server.addEventListener(\"message\", async (event) => {\n      try {\n        const message: WebSocketMessage = JSON.parse(event.data as string);\n        await handleWebSocketMessage(message, userId, server, c.env);\n      } catch (error) {\n        console.error(\"WebSocket message error:\", error);\n        server.send(\n          JSON.stringify({\n            type: \"error\",\n            data: { message: \"Invalid message format\" },\n            timestamp: Date.now(),\n          }),\n        );\n      }\n    });\n\n    // \u5904\u7406\u8FDE\u63A5\u5173\u95ED\n    server.addEventListener(\"close\", () => {\n      handleDisconnection(userId);\n    });\n\n    // \u5904\u7406\u8FDE\u63A5\u9519\u8BEF\n    server.addEventListener(\"error\", (error) => {\n      console.error(`WebSocket error for user ${userId}:`, error);\n      handleDisconnection(userId);\n    });\n\n    // \u5FC3\u8DF3\u68C0\u6D4B\n    const heartbeatInterval = setInterval(() => {\n      try {\n        server.send(\n          JSON.stringify({\n            type: \"ping\",\n            timestamp: Date.now(),\n          }),\n        );\n      } catch (error) {\n        clearInterval(heartbeatInterval);\n        handleDisconnection(userId);\n      }\n    }, 30000); // 30\u79D2\u5FC3\u8DF3\n\n    // \u6E05\u7406\u5FC3\u8DF3\u5B9A\u65F6\u5668\n    server.addEventListener(\"close\", () => {\n      clearInterval(heartbeatInterval);\n    });\n\n    return new Response(null, {\n      status: 101,\n      webSocket: client,\n    });\n  } catch (error) {\n    console.error(\"WebSocket authentication error:\", error);\n    return c.text(\"Authentication failed\", 401);\n  }\n});\n\n// \u5904\u7406WebSocket\u6D88\u606F\nasync function handleWebSocketMessage(\n  message: WebSocketMessage,\n  userId: string,\n  socket: WebSocket,\n  env: Env,\n) {\n  const prisma = getPrismaClient(env);\n\n  switch (message.type) {\n    case \"message\":\n      await handleChatMessage(message, userId, prisma, socket);\n      break;\n    case \"typing\":\n      await handleTypingIndicator(message, userId, socket);\n      break;\n    case \"online_status\":\n      await handleOnlineStatus(userId, message.data);\n      break;\n    case \"read_receipt\":\n      await handleReadReceipt(message, userId, prisma, socket);\n      break;\n    default:\n      socket.send(\n        JSON.stringify({\n          type: \"error\",\n          data: { message: \"Unknown message type\" },\n          timestamp: Date.now(),\n        }),\n      );\n  }\n}\n\n// \u5904\u7406\u804A\u5929\u6D88\u606F\nasync function handleChatMessage(\n  message: WebSocketMessage,\n  userId: string,\n  prisma: any,\n  senderSocket: WebSocket,\n) {\n  try {\n    const { chatId, content, type = \"text\" } = message.data;\n\n    // \u9A8C\u8BC1\u7528\u6237\u662F\u5426\u5C5E\u4E8E\u8BE5\u804A\u5929\n    const chat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        OR: [{ userId }, { master: { userId } }],\n      },\n      include: {\n        user: true,\n        master: true,\n      },\n    });\n\n    if (!chat) {\n      senderSocket.send(\n        JSON.stringify({\n          type: \"error\",\n          data: { message: \"Chat not found or access denied\" },\n          timestamp: Date.now(),\n        }),\n      );\n      return;\n    }\n\n    // \u521B\u5EFA\u6D88\u606F\u5BF9\u8C61\n    const messageData = {\n      id: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      chatId,\n      senderId: userId,\n      content,\n      type,\n      timestamp: message.timestamp,\n      read: false,\n    };\n\n    // \u4FDD\u5B58\u6D88\u606F\u5230\u6570\u636E\u5E93\n    const updatedMessages = [...((chat.messages as any[]) || []), messageData];\n    await prisma.chat.update({\n      where: { id: chatId },\n      data: { messages: updatedMessages },\n    });\n\n    // \u83B7\u53D6\u63A5\u6536\u8005ID\n    const receiverId =\n      chat.userId === userId ? chat.master.userId : chat.userId;\n\n    // \u53D1\u9001\u7ED9\u53D1\u9001\u8005\uFF08\u786E\u8BA4\uFF09\n    senderSocket.send(\n      JSON.stringify({\n        type: \"message_sent\",\n        data: messageData,\n        timestamp: Date.now(),\n      }),\n    );\n\n    // \u53D1\u9001\u7ED9\u63A5\u6536\u8005\n    const receiverClient = connectedClients.get(receiverId);\n    if (receiverClient && receiverClient.socket.readyState === WebSocket.OPEN) {\n      receiverClient.socket.send(\n        JSON.stringify({\n          type: \"new_message\",\n          data: messageData,\n          timestamp: Date.now(),\n        }),\n      );\n    }\n\n    // \u66F4\u65B0\u53D1\u9001\u8005\u52A0\u5165\u7684\u804A\u5929\u5217\u8868\n    const senderClient = connectedClients.get(userId);\n    if (senderClient) {\n      senderClient.chatIds.add(chatId);\n    }\n  } catch (error) {\n    console.error(\"Handle chat message error:\", error);\n    senderSocket.send(\n      JSON.stringify({\n        type: \"error\",\n        data: { message: \"Failed to send message\" },\n        timestamp: Date.now(),\n      }),\n    );\n  }\n}\n\n// \u5904\u7406\u6B63\u5728\u8F93\u5165\u6307\u793A\u5668\nasync function handleTypingIndicator(\n  message: WebSocketMessage,\n  userId: string,\n  senderSocket: WebSocket,\n) {\n  try {\n    const { chatId, isTyping } = message.data;\n\n    const senderClient = connectedClients.get(userId);\n    if (!senderClient || !senderClient.chatIds.has(chatId)) {\n      return;\n    }\n\n    // \u53D1\u9001\u7ED9\u804A\u5929\u4E2D\u7684\u5176\u4ED6\u7528\u6237\n    for (const [clientId, client] of connectedClients) {\n      if (clientId !== userId && client.chatIds.has(chatId)) {\n        client.socket.send(\n          JSON.stringify({\n            type: \"typing_indicator\",\n            data: {\n              chatId,\n              userId,\n              isTyping,\n            },\n            timestamp: Date.now(),\n          }),\n        );\n      }\n    }\n  } catch (error) {\n    console.error(\"Handle typing indicator error:\", error);\n  }\n}\n\n// \u5904\u7406\u5728\u7EBF\u72B6\u6001\nasync function handleOnlineStatus(userId: string, data: any) {\n  try {\n    const client = connectedClients.get(userId);\n    if (client) {\n      client.lastSeen = Date.now();\n\n      // \u5E7F\u64AD\u72B6\u6001\u53D8\u5316\u7ED9\u76F8\u5173\u7528\u6237\n      for (const [clientId, clientInfo] of connectedClients) {\n        if (clientId !== userId) {\n          clientInfo.socket.send(\n            JSON.stringify({\n              type: \"online_status_change\",\n              data: {\n                userId,\n                status: \"online\",\n                lastSeen: client.lastSeen,\n              },\n              timestamp: Date.now(),\n            }),\n          );\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Handle online status error:\", error);\n  }\n}\n\n// \u5904\u7406\u5DF2\u8BFB\u56DE\u6267\nasync function handleReadReceipt(\n  message: WebSocketMessage,\n  userId: string,\n  prisma: any,\n  senderSocket: WebSocket,\n) {\n  try {\n    const { chatId, messageId } = message.data;\n\n    // \u9A8C\u8BC1\u804A\u5929\u6743\u9650\n    const chat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        OR: [{ userId }, { master: { userId } }],\n      },\n    });\n\n    if (!chat) {\n      return;\n    }\n\n    // \u66F4\u65B0\u6D88\u606F\u5DF2\u8BFB\u72B6\u6001\n    const messages = (chat.messages as any[]) || [];\n    const updatedMessages = messages.map((msg) =>\n      msg.id === messageId ? { ...msg, read: true } : msg,\n    );\n\n    await prisma.chat.update({\n      where: { id: chatId },\n      data: { messages: updatedMessages },\n    });\n\n    // \u901A\u77E5\u53D1\u9001\u8005\u6D88\u606F\u5DF2\u8BFB\n    const messageSenderId = messages.find(\n      (msg) => msg.id === messageId,\n    )?.senderId;\n    if (messageSenderId && messageSenderId !== userId) {\n      const senderClient = connectedClients.get(messageSenderId);\n      if (senderClient && senderClient.socket.readyState === WebSocket.OPEN) {\n        senderClient.socket.send(\n          JSON.stringify({\n            type: \"message_read\",\n            data: {\n              chatId,\n              messageId,\n              readBy: userId,\n            },\n            timestamp: Date.now(),\n          }),\n        );\n      }\n    }\n  } catch (error) {\n    console.error(\"Handle read receipt error:\", error);\n  }\n}\n\n// \u5904\u7406\u7528\u6237\u65AD\u5F00\u8FDE\u63A5\nfunction handleDisconnection(userId: string) {\n  const client = connectedClients.get(userId);\n  if (client) {\n    // \u5E7F\u64AD\u79BB\u7EBF\u72B6\u6001\n    for (const [clientId, clientInfo] of connectedClients) {\n      if (clientId !== userId) {\n        clientInfo.socket.send(\n          JSON.stringify({\n            type: \"online_status_change\",\n            data: {\n              userId,\n              status: \"offline\",\n              lastSeen: Date.now(),\n            },\n            timestamp: Date.now(),\n          }),\n        );\n      }\n    }\n\n    // \u4ECE\u8FDE\u63A5\u6C60\u4E2D\u79FB\u9664\n    connectedClients.delete(userId);\n  }\n}\n\n// \u83B7\u53D6\u5728\u7EBF\u7528\u6237\u5217\u8868\nwebsocketRoutes.get(\"/online-users\", async (c) => {\n  const onlineUsers = Array.from(connectedClients.entries()).map(\n    ([userId, client]) => ({\n      userId,\n      lastSeen: client.lastSeen,\n    }),\n  );\n\n  return c.json({ onlineUsers });\n});\n\n// \u83B7\u53D6\u804A\u5929\u5386\u53F2\u8BB0\u5F55\nwebsocketRoutes.get(\"/chat-history/:chatId\", async (c) => {\n  try {\n    const token = c.req.header(\"Authorization\")?.replace(\"Bearer \", \"\");\n    if (!token) {\n      return c.json({ error: \"Missing token\" }, 401);\n    }\n\n    const payload = await verifyJWT(token, c.env.JWT_SECRET);\n    const userId = payload.userId;\n    const chatId = c.req.param(\"chatId\");\n\n    const prisma = getPrismaClient(c.env);\n\n    // \u9A8C\u8BC1\u7528\u6237\u6743\u9650\n    const chat = await prisma.chat.findFirst({\n      where: {\n        id: chatId,\n        OR: [{ userId }, { master: { userId } }],\n      },\n      select: {\n        id: true,\n        messages: true,\n        createdAt: true,\n      },\n    });\n\n    if (!chat) {\n      return c.json({ error: \"Chat not found\" }, 404);\n    }\n\n    return c.json({\n      chatId: chat.id,\n      messages: chat.messages || [],\n      createdAt: chat.createdAt,\n    });\n  } catch (error) {\n    console.error(\"Get chat history error:\", error);\n    return c.json({ error: \"Failed to get chat history\" }, 500);\n  }\n});\n", "import { Context, Next } from \"hono\";\nimport { Env, Variables } from \"../lib/auth\";\n\ninterface CacheOptions {\n  ttl?: number; // \u7F13\u5B58\u65F6\u95F4\uFF08\u79D2\uFF09\n  key?: string; // \u81EA\u5B9A\u4E49\u7F13\u5B58\u952E\n  vary?: string[]; // \u6839\u636E\u8BF7\u6C42\u5934\u53D8\u5316\u7684\u7F13\u5B58\n  condition?: (c: Context) => boolean; // \u7F13\u5B58\u6761\u4EF6\n}\n\n// \u7F13\u5B58\u4E2D\u95F4\u4EF6\nexport const cache = (options: CacheOptions = {}) => {\n  return async (c: Context<{ Bindings: Env }>, next: Next) => {\n    // \u53EA\u7F13\u5B58GET\u8BF7\u6C42\n    if (c.req.method !== \"GET\") {\n      return next();\n    }\n\n    // \u68C0\u67E5\u7F13\u5B58\u6761\u4EF6\n    if (options.condition && !options.condition(c)) {\n      return next();\n    }\n\n    // \u751F\u6210\u7F13\u5B58\u952E\n    const cacheKey = generateCacheKey(c, options);\n\n    try {\n      // \u5C1D\u8BD5\u4ECEKV\u83B7\u53D6\u7F13\u5B58\n      const cached = c.env.CACHE ? await c.env.CACHE.get(cacheKey) : null;\n\n      if (cached) {\n        const data = JSON.parse(cached);\n\n        // \u8BBE\u7F6E\u7F13\u5B58\u5934\n        c.header(\"X-Cache\", \"HIT\");\n        c.header(\n          \"X-Cache-Age\",\n          Math.floor((Date.now() - data.timestamp) / 1000).toString(),\n        );\n\n        return c.json(data.response, data.status);\n      }\n\n      // \u7F13\u5B58\u672A\u547D\u4E2D\uFF0C\u7EE7\u7EED\u5904\u7406\u8BF7\u6C42\n      c.header(\"X-Cache\", \"MISS\");\n      await next();\n\n      // \u53EA\u7F13\u5B58\u6210\u529F\u54CD\u5E94\n      if (c.res.status < 400) {\n        const response = await c.res.clone().json();\n        const ttl = options.ttl || 300; // \u9ED8\u8BA45\u5206\u949F\n\n        // \u4FDD\u5B58\u5230KV\n        if (c.env.CACHE) {\n          await c.env.CACHE.put(\n            cacheKey,\n            JSON.stringify({\n              response,\n              status: c.res.status,\n              timestamp: Date.now(),\n            }),\n            { expirationTtl: ttl },\n          );\n        }\n      }\n    } catch (error) {\n      console.error(\"Cache error:\", error);\n      // \u7F13\u5B58\u9519\u8BEF\u4E0D\u5E94\u5F71\u54CD\u6B63\u5E38\u8BF7\u6C42\n      await next();\n    }\n  };\n};\n\n// \u751F\u6210\u7F13\u5B58\u952E\nfunction generateCacheKey(c: Context, options: CacheOptions): string {\n  if (options.key) {\n    return options.key;\n  }\n\n  const url = new URL(c.req.url);\n  const path = url.pathname;\n  const search = url.search;\n\n  // \u57FA\u7840\u952E\n  let cacheKey = `cache:${path}${search}`;\n\n  // \u6839\u636E\u8BF7\u6C42\u5934\u53D8\u5316\n  if (options.vary) {\n    const varyHeaders = options.vary\n      .map((header) => `${header}:${c.req.header(header) || \"\"}`)\n      .join(\"|\");\n    cacheKey += `|vary:${varyHeaders}`;\n  }\n\n  return cacheKey;\n}\n\n// \u6E05\u9664\u7F13\u5B58\nexport const clearCache = async (\n  c: Context<{ Bindings: Env }>,\n  pattern: string,\n) => {\n  try {\n    if (!c.env.CACHE) {\n      throw new Error(\"CACHE not available\");\n    }\n    const list = await c.env.CACHE.list({ prefix: pattern });\n    const deletePromises = list.keys.map((key) =>\n      c.env.CACHE!.delete(key.name),\n    );\n    await Promise.all(deletePromises);\n\n    return { success: true, deleted: list.keys.length };\n  } catch (error) {\n    console.error(\"Clear cache error:\", error);\n    throw error;\n  }\n};\n\n// \u7F13\u5B58\u88C5\u9970\u5668 - \u7528\u4E8E\u7279\u5B9A\u7684\u7F13\u5B58\u903B\u8F91\nexport const cacheWithParams = (\n  keyGenerator: (c: Context) => string,\n  options: Omit<CacheOptions, \"key\"> = {},\n) => {\n  return async (c: Context<{ Bindings: Env }>, next: Next) => {\n    const cacheOptions = { ...options, key: keyGenerator(c) };\n    return cache(cacheOptions)(c, next);\n  };\n};\n\n// \u7528\u6237\u76F8\u5173\u7F13\u5B58\nexport const userCache = (ttl: number = 300) => {\n  return cacheWithParams((c) => `user:${c.get(\"userId\")}:${c.req.path}`, {\n    ttl,\n  });\n};\n\n// \u516B\u5B57\u7ED3\u679C\u7F13\u5B58\uFF08\u8F83\u957F\u65F6\u95F4\uFF09\nexport const baziCache = (ttl: number = 86400) => {\n  // 24\u5C0F\u65F6\n  return cacheWithParams(\n    (c) => {\n      const body = c.req.raw.clone();\n      return body.text().then((text) => {\n        const input = JSON.parse(text);\n        const hash = hashObject(input);\n        return `bazi:${hash}`;\n      });\n    },\n    { ttl },\n  );\n};\n\n// \u5BF9\u8C61\u54C8\u5E0C\u51FD\u6570\nfunction hashObject(obj: any): string {\n  const str = JSON.stringify(obj, Object.keys(obj).sort());\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // \u8F6C\u6362\u4E3A32\u4F4D\u6574\u6570\n  }\n  return Math.abs(hash).toString(36);\n}\n\n// \u5206\u9875\u7F13\u5B58\u8F85\u52A9\u51FD\u6570\nexport const paginationCache = (baseKey: string, ttl: number = 300) => {\n  return cacheWithParams(\n    (c) => {\n      const page = c.req.query(\"page\") || \"1\";\n      const limit = c.req.query(\"limit\") || \"10\";\n      return `${baseKey}:page:${page}:limit:${limit}`;\n    },\n    { ttl },\n  );\n};\n\n// \u6761\u4EF6\u7F13\u5B58 - \u6839\u636E\u7528\u6237\u89D2\u8272\nexport const roleBasedCache = (options: CacheOptions = {}) => {\n  return cacheWithParams((c) => {\n    const role = c.get(\"userRole\") || \"anonymous\";\n    const path = c.req.path;\n    return Promise.resolve(`role:${role}:${path}`);\n  }, options);\n};\n", "import { Context, Next } from \"hono\";\nimport { Env, Variables } from \"../lib/auth\";\n\ninterface RateLimitOptions {\n  windowMs?: number; // \u65F6\u95F4\u7A97\u53E3\uFF08\u6BEB\u79D2\uFF09\n  max?: number; // \u6700\u5927\u8BF7\u6C42\u6570\n  message?: string; // \u9650\u6D41\u6D88\u606F\n  skipSuccessfulRequests?: boolean; // \u8DF3\u8FC7\u6210\u529F\u8BF7\u6C42\n  skipFailedRequests?: boolean; // \u8DF3\u8FC7\u5931\u8D25\u8BF7\u6C42\n  keyGenerator?: (c: Context) => string; // \u81EA\u5B9A\u4E49\u952E\u751F\u6210\u5668\n}\n\ninterface RateLimitRecord {\n  count: number;\n  resetTime: number;\n}\n\nexport const rateLimit = (options: RateLimitOptions = {}) => {\n  return async (c: Context<{ Bindings: Env }>, next: Next) => {\n    const {\n      windowMs = 60 * 1000, // \u9ED8\u8BA41\u5206\u949F\n      max = 100, // \u9ED8\u8BA4100\u6B21\n      message = \"Too many requests, please try again later.\",\n      skipSuccessfulRequests = false,\n      skipFailedRequests = false,\n      keyGenerator = defaultKeyGenerator,\n    } = options;\n\n    // \u751F\u6210\u9650\u6D41\u952E\n    const key = `rate_limit:${keyGenerator(c)}`;\n\n    try {\n      // \u83B7\u53D6\u5F53\u524D\u8BB0\u5F55\n      const current = c.env.CACHE ? await c.env.CACHE.get(key) : null;\n      const now = Date.now();\n      let record: RateLimitRecord;\n\n      if (current) {\n        record = JSON.parse(current);\n\n        // \u68C0\u67E5\u662F\u5426\u9700\u8981\u91CD\u7F6E\n        if (now > record.resetTime) {\n          record = {\n            count: 0,\n            resetTime: now + windowMs,\n          };\n        }\n      } else {\n        record = {\n          count: 0,\n          resetTime: now + windowMs,\n        };\n      }\n\n      // \u589E\u52A0\u8BA1\u6570\n      record.count++;\n\n      // \u4FDD\u5B58\u66F4\u65B0\u7684\u8BB0\u5F55\n      if (c.env.CACHE) {\n        await c.env.CACHE.put(key, JSON.stringify(record), {\n          expirationTtl: Math.ceil(windowMs / 1000) + 1,\n        });\n      }\n\n      // \u8BBE\u7F6E\u54CD\u5E94\u5934\n      c.header(\"X-RateLimit-Limit\", max.toString());\n      c.header(\n        \"X-RateLimit-Remaining\",\n        Math.max(0, max - record.count).toString(),\n      );\n      c.header(\n        \"X-RateLimit-Reset\",\n        Math.ceil(record.resetTime / 1000).toString(),\n      );\n\n      // \u68C0\u67E5\u662F\u5426\u8D85\u8FC7\u9650\u5236\n      if (record.count > max) {\n        c.header(\n          \"Retry-After\",\n          Math.ceil((record.resetTime - now) / 1000).toString(),\n        );\n        return c.json(\n          {\n            error: \"Rate limit exceeded\",\n            message,\n            resetTime: record.resetTime,\n            windowMs,\n            max,\n          },\n          429,\n        );\n      }\n\n      // \u7EE7\u7EED\u5904\u7406\u8BF7\u6C42\n      await next();\n\n      // \u6839\u636E\u914D\u7F6E\u8DF3\u8FC7\u67D0\u4E9B\u8BF7\u6C42\n      if (skipSuccessfulRequests && c.res.status < 400) {\n        record.count--;\n        if (c.env.CACHE) {\n          if (c.env.CACHE) {\n            await c.env.CACHE.put(key, JSON.stringify(record), {\n              expirationTtl: Math.ceil(windowMs / 1000) + 1,\n            });\n          }\n        }\n      }\n\n      if (skipFailedRequests && c.res.status >= 400) {\n        record.count--;\n        await c.env.CACHE.put(key, JSON.stringify(record), {\n          expirationTtl: Math.ceil(windowMs / 1000) + 1,\n        });\n      }\n    } catch (error) {\n      console.error(\"Rate limit error:\", error);\n      // \u9650\u6D41\u9519\u8BEF\u4E0D\u5E94\u5F71\u54CD\u6B63\u5E38\u8BF7\u6C42\n      await next();\n    }\n  };\n};\n\n// \u9ED8\u8BA4\u952E\u751F\u6210\u5668\nfunction defaultKeyGenerator(c: Context): string {\n  const ip =\n    c.req.header(\"CF-Connecting-IP\") ||\n    c.req.header(\"X-Forwarded-For\") ||\n    c.req.header(\"X-Real-IP\") ||\n    \"unknown\";\n\n  const userAgent = c.req.header(\"User-Agent\") || \"\";\n  const path = c.req.path;\n\n  // \u57FA\u4E8EIP\u3001\u8DEF\u5F84\u548C\u7528\u6237\u4EE3\u7406\u751F\u6210\u552F\u4E00\u952E\n  return `${ip}:${path}:${hashString(userAgent.substring(0, 50))}`;\n}\n\n// \u57FA\u4E8E\u7528\u6237\u7684\u9650\u6D41\nexport const userRateLimit = (\n  options: Omit<RateLimitOptions, \"keyGenerator\"> = {},\n) => {\n  return rateLimit({\n    ...options,\n    keyGenerator: (c) => {\n      const userId = c.get(\"userId\") || \"anonymous\";\n      return `user:${userId}:${c.req.path}`;\n    },\n  });\n};\n\n// \u57FA\u4E8EIP\u7684\u9650\u6D41\nexport const ipRateLimit = (\n  options: Omit<RateLimitOptions, \"keyGenerator\"> = {},\n) => {\n  return rateLimit({\n    ...options,\n    keyGenerator: (c) => {\n      const ip =\n        c.req.header(\"CF-Connecting-IP\") ||\n        c.req.header(\"X-Forwarded-For\") ||\n        c.req.header(\"X-Real-IP\") ||\n        \"unknown\";\n      return `ip:${ip}:${c.req.path}`;\n    },\n  });\n};\n\n// \u4E25\u683C\u7684API\u9650\u6D41\uFF08\u7528\u4E8E\u654F\u611F\u64CD\u4F5C\uFF09\nexport const strictRateLimit = (options: RateLimitOptions = {}) => {\n  return rateLimit({\n    windowMs: 60 * 1000, // 1\u5206\u949F\n    max: 10, // \u6700\u591A10\u6B21\n    ...options,\n  });\n};\n\n// \u4E0A\u4F20\u6587\u4EF6\u9650\u6D41\nexport const uploadRateLimit = rateLimit({\n  windowMs: 60 * 1000, // 1\u5206\u949F\n  max: 5, // \u6700\u591A5\u6B21\u4E0A\u4F20\n  message: \"Upload limit exceeded. Please wait before uploading again.\",\n});\n\n// \u767B\u5F55\u9650\u6D41\nexport const loginRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15\u5206\u949F\n  max: 5, // \u6700\u591A5\u6B21\u767B\u5F55\u5C1D\u8BD5\n  message: \"Too many login attempts. Please try again later.\",\n  keyGenerator: async (c) => {\n    const ip = c.req.header(\"CF-Connecting-IP\") || \"unknown\";\n    const email = c.req.raw?.body\n      ? JSON.parse(await c.req.raw.clone().text()).email\n      : \"\";\n    return `login:${ip}:${email}`;\n  },\n});\n\n// \u6CE8\u518C\u9650\u6D41\nexport const registerRateLimit = rateLimit({\n  windowMs: 60 * 60 * 1000, // 1\u5C0F\u65F6\n  max: 3, // \u6700\u591A3\u6B21\u6CE8\u518C\n  message: \"Registration limit exceeded. Please try again later.\",\n  keyGenerator: (c) => {\n    const ip = c.req.header(\"CF-Connecting-IP\") || \"unknown\";\n    return `register:${ip}`;\n  },\n});\n\n// \u516B\u5B57\u8BA1\u7B97\u9650\u6D41\nexport const baziRateLimit = rateLimit({\n  windowMs: 60 * 1000, // 1\u5206\u949F\n  max: 20, // \u6700\u591A20\u6B21\u8BA1\u7B97\n  message: \"Bazi calculation limit exceeded. Please wait before trying again.\",\n  keyGenerator: (c) => {\n    const userId = c.get(\"userId\") || \"anonymous\";\n    return `bazi:${userId}`;\n  },\n});\n\n// API\u5BC6\u94A5\u9650\u6D41\nexport const apiKeyRateLimit = (\n  options: Omit<RateLimitOptions, \"keyGenerator\"> = {},\n) => {\n  return rateLimit({\n    ...options,\n    keyGenerator: (c) => {\n      const apiKey = c.req.header(\"X-API-Key\") || \"none\";\n      return `api_key:${apiKey}:${c.req.path}`;\n    },\n  });\n};\n\n// \u5B57\u7B26\u4E32\u54C8\u5E0C\u51FD\u6570\nfunction hashString(str: string): string {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // \u8F6C\u6362\u4E3A32\u4F4D\u6574\u6570\n  }\n  return Math.abs(hash).toString(36);\n}\n\n// \u9650\u6D41\u7EDF\u8BA1\u4FE1\u606F\nexport const getRateLimitStats = async (\n  c: Context<{ Bindings: Env }>,\n  pattern: string,\n) => {\n  try {\n    if (!c.env.CACHE) {\n      return { totalKeys: 0, keys: [] };\n    }\n    const list = await c.env.CACHE.list({ prefix: `rate_limit:${pattern}` });\n\n    const stats = {\n      totalKeys: list.keys.length,\n      keys: list.keys.map((key) => ({\n        name: key.name,\n        expiration: key.expiration,\n      })),\n    };\n\n    return stats;\n  } catch (error) {\n    console.error(\"Get rate limit stats error:\", error);\n    throw error;\n  }\n};\n\n// \u6E05\u9664\u7279\u5B9A\u7528\u6237\u7684\u9650\u6D41\u8BB0\u5F55\nexport const clearUserRateLimit = async (\n  c: Context<{ Bindings: Env }>,\n  userId: string,\n) => {\n  try {\n    const pattern = `rate_limit:user:${userId}:`;\n    if (!c.env.CACHE) {\n      return { success: false, cleared: 0 };\n    }\n    const list = await c.env.CACHE.list({ prefix: pattern });\n    const deletePromises = list.keys.map((key) =>\n      c.env.CACHE!.delete(key.name),\n    );\n    await Promise.all(deletePromises);\n\n    return { success: true, cleared: list.keys.length };\n  } catch (error) {\n    console.error(\"Clear user rate limit error:\", error);\n    throw error;\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["init", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "name", "__copyProps", "PrismaClient", "prisma", "require_edge", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "name", "__copyProps", "src_exports", "Debug", "src_default", "$", "bgBlack", "bgBlue", "bgCyan", "bgGreen", "bgMagenta", "bgRed", "bgWhite", "bgYellow", "black", "blue", "bold", "cyan", "dim", "gray", "green", "grey", "hidden", "inverse", "italic", "magenta", "red", "reset", "strikethrough", "underline", "white", "yellow", "FORCE_COLOR", "NODE_DISABLE_COLORS", "NO_COLOR", "TERM", "isTTY", "init", "log", "cache", "err", "match", "name", "name", "raw", "c", "name", "c", "err", "app", "name", "c", "init", "Node", "name", "Node", "Hono", "c", "process", "c", "Hono", "c", "prisma", "Hono", "c", "prisma", "Hono", "authMiddleware", "c", "prisma", "Hono", "authMiddleware", "c", "prisma", "Hono", "authMiddleware", "c", "prisma", "Hono", "authMiddleware", "c", "prisma", "Hono", "authMiddleware", "c", "prisma", "sign", "crypto", "Hono", "authMiddleware", "c", "prisma", "verifyPassword", "hashPassword", "Hono", "c", "prisma", "c", "c", "c", "c", "Hono", "c", "err", "init"]
}
