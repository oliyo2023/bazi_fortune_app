import React from 'react';
import {
    List,
    Datagrid,
    TextField,
    DateField,
    Show,
    SimpleShowLayout,
    Filter,
    SearchInput,
    TopToolbar,
    ExportButton,
    FunctionField,
    useRecordContext,
    ReferenceField,
    BooleanField,
    NumberField,
} from 'react-admin';
import { Card, CardContent, Typography, Box, Grid, Chip, Avatar } from '@mui/material';
import { Chat, Message, Person, Star } from '@mui/icons-material';

// ËÅäÂ§©ËÆ∞ÂΩïÁ≠õÈÄâÂô®
const ChatFilter = (props) => (
    <Filter {...props}>
        <SearchInput source="q" placeholder="üîç ÊêúÁ¥¢Áî®Êà∑ÊàñÂ§ßÂ∏à" alwaysOn />
        <BooleanField source="is_trial" label="üÜì ‰ªÖÊòæÁ§∫ËØïËÅä" />
    </Filter>
);

// Ëá™ÂÆö‰πâÂàóË°®Êìç‰ΩúÊ†è
const ListActions = () => (
    <TopToolbar>
        <ExportButton />
    </TopToolbar>
);

// ËÅäÂ§©Áä∂ÊÄÅÁªÑ‰ª∂
const ChatStatus = () => {
    const record = useRecordContext();
    if (!record) return null;

    const getStatusConfig = (status) => {
        switch (status) {
            case 'active':
                return { label: 'ËøõË°å‰∏≠', color: 'success' };
            case 'ended':
                return { label: 'Â∑≤ÁªìÊùü', color: 'default' };
            case 'pending':
                return { label: 'Á≠âÂæÖ‰∏≠', color: 'warning' };
            default:
                return { label: 'Êú™Áü•', color: 'error' };
        }
    };

    const config = getStatusConfig(record.status);
    
    return (
        <Chip
            label={config.label}
            color={config.color}
            size="small"
        />
    );
};

// ËÅäÂ§©Á±ªÂûãÁªÑ‰ª∂
const ChatType = () => {
    const record = useRecordContext();
    if (!record) return null;
    
    return (
        <Chip
            label={record.is_trial ? 'üÜì ËØïËÅä' : 'üí∞ ‰ªòË¥π'}
            color={record.is_trial ? 'info' : 'warning'}
            size="small"
        />
    );
};

// ËÅäÂ§©ËÆ∞ÂΩïÂàóË°®ÁªÑ‰ª∂
export const ChatList = (props) => (
    <List
        {...props}
        filters={<ChatFilter />}
        actions={<ListActions />}
        perPage={25}
        sort={{ field: 'created_at', order: 'DESC' }}
    >
        <Datagrid rowClick="show" bulkActionButtons={false}>
            <ReferenceField source="user_id" reference="users" label="üë§ Áî®Êà∑">
                <TextField source="id" />
            </ReferenceField>
            <ReferenceField source="master_id" reference="masters" label="üåü Â§ßÂ∏à">
                <TextField source="name" />
            </ReferenceField>
            <FunctionField
                label="üí¨ Á±ªÂûã"
                render={record => <ChatType />}
            />
            <FunctionField
                label="üìä Áä∂ÊÄÅ"
                render={record => <ChatStatus />}
            />
            <NumberField source="message_count" label="üí¨ Ê∂àÊÅØÊï∞" />
            <DateField source="created_at" label="üìÖ ÂºÄÂßãÊó∂Èó¥" showTime />
            <DateField source="ended_at" label="‚è∞ ÁªìÊùüÊó∂Èó¥" showTime />
        </Datagrid>
    </List>
);

// ËÅäÂ§©ËÆ∞ÂΩïËØ¶ÊÉÖÊòæÁ§∫ÁªÑ‰ª∂
export const ChatShow = (props) => (
    <Show {...props}>
        <SimpleShowLayout>
            <Card>
                <CardContent>
                    <Grid container spacing={3}>
                        <Grid item xs={12} md={4}>
                            <Box display="flex" flexDirection="column" alignItems="center" mb={3}>
                                <Avatar sx={{ width: 80, height: 80, mb: 2, bgcolor: '#ff6900' }}>
                                    <Chat sx={{ fontSize: 40 }} />
                                </Avatar>
                                <Typography variant="h6">ËÅäÂ§©ËØ¶ÊÉÖ</Typography>
                                <FunctionField
                                    render={record => <ChatType />}
                                />
                                <Box mt={1}>
                                    <FunctionField
                                        render={record => <ChatStatus />}
                                    />
                                </Box>
                            </Box>
                        </Grid>
                        
                        <Grid item xs={12} md={8}>
                            <Box mb={3}>
                                <Typography variant="h6" gutterBottom>
                                    <Person sx={{ mr: 1, verticalAlign: 'middle' }} />
                                    ÂèÇ‰∏éËÄÖ‰ø°ÊÅØ
                                </Typography>
                                <ReferenceField source="user_id" reference="users" label="üë§ Áî®Êà∑ID">
                                    <TextField source="id" />
                                </ReferenceField>
                                <ReferenceField source="master_id" reference="masters" label="üåü Â§ßÂ∏à">
                                    <TextField source="name" />
                                </ReferenceField>
                            </Box>
                            
                            <Box mb={3}>
                                <Typography variant="h6" gutterBottom>
                                    <Message sx={{ mr: 1, verticalAlign: 'middle' }} />
                                    ËÅäÂ§©ÁªüËÆ°
                                </Typography>
                                <NumberField source="message_count" label="üí¨ Ê∂àÊÅØÊÄªÊï∞" />
                                <BooleanField source="is_trial" label="üÜì ÊòØÂê¶ËØïËÅä" />
                                <DateField source="created_at" label="üìÖ ÂºÄÂßãÊó∂Èó¥" showTime />
                                <DateField source="ended_at" label="‚è∞ ÁªìÊùüÊó∂Èó¥" showTime />
                            </Box>
                            
                            <Box mb={3}>
                                <Typography variant="h6" gutterBottom>
                                    <Star sx={{ mr: 1, verticalAlign: 'middle' }} />
                                    ÂÖ≥ËÅî‰ø°ÊÅØ
                                </Typography>
                                <ReferenceField source="order_id" reference="orders" label="üìã ÂÖ≥ËÅîËÆ¢Âçï" emptyText="Êó†ÂÖ≥ËÅîËÆ¢Âçï">
                                    <TextField source="id" />
                                </ReferenceField>
                            </Box>
                        </Grid>
                    </Grid>
                </CardContent>
            </Card>
        </SimpleShowLayout>
    </Show>
);